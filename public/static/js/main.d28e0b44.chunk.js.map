{"version":3,"sources":["Reducer.js","Store.js","services/api.js","Preferences.js","Register.js","Report.js","components/DeleteDialog.js","components/TableView.js","components/CreateForm.js","formdialog/CarTypeForm.js","components/UpdateForm.js","manager/CarTypeManager.js","formdialog/BrandForm.js","manager/BrandManager.js","dataview/CarView.js","formdialog/CarForm.js","formdialog/CarUpdateForm.js","manager/CarManager.js","dataview/CarModelView.js","formdialog/CarModelForm.js","manager/CarModelManager.js","dataview/CarOptionView.js","formdialog/CarOptionForm.js","manager/CarOptionManager.js","dataview/DealerView.js","manager/DealerManager.js","formdialog/EmployeeTypeForm.js","manager/EmployeeTypeManager.js","dataview/EmployeeView.js","formdialog/EmployeeForm.js","manager/EmployeeManager.js","dataview/SupplierView.js","formdialog/SupplierForm.js","manager/SupplierManager.js","dataview/ManufacturerView.js","manager/ManufacturerManager.js","dataview/PartView.js","formdialog/PartForm.js","manager/PartManager.js","formdialog/TransactionTypeForm.js","manager/TransactionTypeManager.js","formdialog/TransactionStatusForm.js","manager/TransactionStatusManager.js","dataview/TransactionView.js","formdialog/TransactionForm.js","manager/TransactionManager.js","dataview/CustomerView.js","formdialog/CustomerForm.js","manager/CustomerManager.js","dataview/TransactionRequestView.js","manager/TransactionRequestManager.js","dataview/InventoryView.js","manager/InventoryManager.js","menu/MainMenu.js","menu/CustomerMenu.js","menu/CarMenu.js","menu/PartMenu.js","menu/TransactionMenu.js","menu/AccountMenu.js","menu/EmployeeMenu.js","dataview/AdminView.js","formdialog/AdminForm.js","manager/AdminManager.js","menu/RequestMenu.js","Admin.js","Login.js","user/Nav.js","user/Hero.js","user/Login.js","user/Register.js","user/components/Product.js","user/Cars.js","user/Transaction.js","user/Payed.js","Main.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Reducer","state","action","type","token","payload","user","cart","filter","id","initialState","Context","createContext","Store","children","useReducer","dispatch","Provider","value","apiClient","axios","create","baseURL","withCredentials","Preferences","React","useContext","config","headers","method","onSubmit","event","preventDefault","formdata","FormData","target","entries","Object","fromEntries","updated","assign","patch","then","response","catch","error","color","width","spacing","padding","size","defaultValue","email","isDisabled","name","placeholder","bg","borderColor","colorScheme","alignSelf","Register","useHistory","useState","errors","setErrors","registered","setRegistered","logout","document","cookie","match","pop","getCookieValue","get","data","console","log","height","alignItems","justifyContent","style","backgroundColor","direction","fontSize","fontWeight","e","post","isInvalid","textAlign","margin","onClick","window","location","href","Report","units","setUnits","amounts","setAmounts","useEffect","fetchData","map","item","bgColor","brand","total","variant","JSON","stringify","DeleteDialog","callback","isOpen","setIsOpen","onClose","cancelRef","useRef","leftIcon","className","leastDestructiveRef","ref","keys","ml","TableView","dataset","deleteCallback","openFormCallback","updateForm","textColor","head","body","marginRight","CreateForm","form","doClose","doOpen","mr","CarTypeForm","UpdateForm","loadingText","CarTypeManager","setData","loading","setLoading","createFormOpen","setCreateFormOpen","onCreateFormClose","doCreateFormOpen","updateFormOpen","setUpdateFormOpen","updateFormData","setUpdateFormData","onUpdateFormClose","delete","status","isIndeterminate","position","bottom","right","overflow","BrandForm","BrandManager","brands","setBrands","types","setTypes","fetchAll","setter","vin","option","price","CarForm","options","setOptions","models","setModels","selected","model","transmission","CarView","CarUpdateForm","description","CarModelManager","CarModelView","CarModelForm","engine","CarOptionManager","CarOptionView","CarOptionForm","DealerView","account","DealerManager","EmployeeTypeForm","EmployeeTypeManager","phone","working_date","address","EmployeeForm","dealers","setDealers","el","length","EmployeeView","SupplierView","SupplierManager","SupplierForm","ManufacturerView","ManufacturerManager","PartView","suppliers","setSuppliers","manufacturers","setManufacturers","code","supplier","manufacturer","PartForm","PartManager","TransactionTypeManager","TransactionTypeForm","TransactionStatusManager","TransactionStatusForm","TransactionView","employees","setEmployees","transactionTypes","setTransactionTypes","statuses","setStatuses","findColor","employee","amount","created_at","TransactionForm","TransactionManager","IndividualCustomerView","gender","Customer","IndividualCustomerManager","CustomerView","CustomerForm","TransactionRequestView","TransactionRequestManager","alert","InventoryView","car","sold","MainMenu","menuItems","menu","items","icon","borderRadius","label","CustomerMenu","history","push","link","CarMenu","PartMenu","TransactionMenu","AccountMenu","EmployeeMenu","disabled","AdminManager","AdminView","AdminForm","RequestMenu","Admin","borderBottom","paddingBottom","letterSpacing","flex","pb","as","Button","rightIcon","reload","overflowY","path","CarManager","EmployeeManager","CustomerManager","InventoryManager","Login","Main","useDisclosure","onToggle","minH","py","base","px","borderStyle","align","shadow","md","display","Close","w","h","Hamburger","aria-label","justify","useBreakpointValue","fontFamily","fontWeigh","_hover","lineHeight","in","animateOpacity","DesktopNav","NAV_ITEMS","navItem","trigger","placement","p","textDecoration","border","boxShadow","rounded","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","ChevronRightIcon","MobileNav","MobileNavItem","ChevronDownIcon","marginTop","mt","pl","borderLeft","SplitScreen","maxW","lg","_after","content","left","zIndex","alt","objectFit","src","setError","useColorModeValue","mx","doLogin","doRegister","Product","identifier","borderWidth","htmlWidth","htmlHeight","fit","d","alignContent","isTruncated","stock","Cars","onOpen","current","setCurrent","dealer_id","model_id","customer","inventory","inv_id","Checkouted","sales","setSales","sale","dealer","paid","inventory_id","sales_id","doPay","Payed","NotificationIcon","textTransform","createIcon","displayName","viewBox","x","y","fill","cx","cy","r","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d28e0b44.chunk.js","sourcesContent":["const Reducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_TOKEN':\n            return {\n                ...state,\n                token: action.payload\n            };\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.payload\n            };\n        case 'RESET':\n            return {\n                token: '',\n                user: {},\n                cart: []\n            }\n\n        case 'ADD_CART':\n            return {\n                ...state,\n                cart: [...state.cart, action.payload]\n            }\n        case 'REM_CART':\n            // nothing happen don't know what to do yet\n            return {\n                ...state,\n                cart: [...state.cart.filter(id => id !== action.payload)]\n            }\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;","import React, {createContext, useReducer} from \"react\";\nimport Reducer from './Reducer'\n\n\nconst initialState = {\n    user: {},\n    token: '',\n    cart: [],\n};\n\nconst Store = ({children}) => {\n    const [state, dispatch] = useReducer(Reducer, initialState);\n    return (\n        <Context.Provider value={[state, dispatch]}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport const Context = createContext(initialState);\nexport default Store;","import axios from 'axios';\n\nconst apiClient = axios.create({\n    baseURL: 'http://localhost:8000',\n    withCredentials: true,\n});\n\nexport default apiClient;\n\n","import { Button, FormControl, FormErrorMessage, FormLabel, Input, Text, VStack } from '@chakra-ui/react'\nimport React from 'react'\nimport { Context } from './Store'\nimport apiClient from './services/api'\n\nfunction Preferences() {\n    const [state, dispatch] = React.useContext(Context)\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        const updated = Object.assign(state.user, entries)\n        \n        apiClient.patch('/api/update', updated, config)\n        .then(response => {\n\n        })\n        .catch(error => {})\n    }\n    return (\n        <form method=\"POST\" onSubmit={doUpdate}>\n\n        <VStack color=\"gray.700\" width=\"24rem\" spacing=\"1rem\" padding=\"0 1rem\">\n\n            <FormControl id=\"email\" size=\"sm\">\n                <FormLabel size=\"sm\">Email Address</FormLabel>\n                <Input defaultValue={state.user.email} isDisabled name=\"email\" placeholder=\"Input email\" size=\"sm\" bg=\"white\" borderColor=\"blue.400\" />\n                <FormErrorMessage></FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"name\" size=\"sm\">\n                <FormLabel size=\"sm\">Name</FormLabel>\n                <Input defaultValue={state.user.name} name=\"name\" placeholder=\"Input name\" size=\"sm\" bg=\"white\" borderColor=\"blue.400\" />\n                <FormErrorMessage></FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"name\" size=\"sm\">\n                <FormLabel size=\"sm\">Password</FormLabel>\n                <Input name=\"password\" type=\"password\" placeholder=\"Input password\" size=\"sm\" bg=\"white\" borderColor=\"blue.400\" />\n                <FormErrorMessage></FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"name\" size=\"sm\">\n                <FormLabel size=\"sm\">Confirm Password</FormLabel>\n                <Input name=\"password_confirmation\" type=\"password\" placeholder=\"Password Confirmation\" size=\"sm\" bg=\"white\" borderColor=\"blue.400\" />\n                <FormErrorMessage></FormErrorMessage>\n            </FormControl>\n\n            <Button type=\"submit\" width=\"12rem\" colorScheme=\"blue\" alignSelf=\"flex-end\">Save</Button>\n        </VStack>\n        </form>\n    )\n}\n\nexport default Preferences\n","import React from 'react'\nimport {\n    Flex,\n    Box,\n    Spacer,\n    Stack,\n    Button,\n    Text,\n    FormControl,\n    FormLabel,\n    Input,\n    FormErrorMessage,\n    VStack,\n    Link,\n    HStack\n} from '@chakra-ui/react';\n\nimport apiClient from './services/api';\nimport { Context } from './Store'\nimport { useHistory } from 'react-router-dom'\n\nfunction Register() {\n    const history = useHistory()\n\n    const [errors, setErrors] = React.useState({})\n    const [registered, setRegistered] = React.useState(false)\n    const [state, dispatch] = React.useContext(Context)\n\n    const getCookieValue = (name) => (\n        document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)')?.pop() || ''\n    )\n\n    // try use old session ... \n    if(!state.logout){\n        const token = getCookieValue('X-Sanctum-Token')\n\n        apiClient.get('/api/persistent', {\n            headers: {\n                'Content-Type' : 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n        .then(response => {\n            dispatch({type: 'SET_TOKEN', payload: token})\n            dispatch({type: 'SET_USER', payload: response.data.user})\n            dispatch({type: 'SET_LOGOUT', payload: false})\n        })\n        .catch(error => {\n            console.log('failed to login...')\n            dispatch({type: 'SET_LOGOUT', payload: true})\n            dispatch({type: 'SET_TOKEN', payload: ''})\n        })\n    }\n\n    const doRegister = function(e){\n        e.preventDefault()\n        const formdata = new FormData(e.target)\n        const entries = Object.fromEntries(formdata.entries())\n\n        apiClient.post('/api/register', entries)\n        .then(response => {\n            setRegistered(true)\n            setErrors({})\n        })\n        .catch(error => {\n            setErrors(error.response.data.errors)\n        })\n    }\n\n    return (\n        <Stack height=\"100%\" width=\"100%\" bg=\"blue.600\" alignItems=\"center\" justifyContent=\"center\"\n            style={\n                {\n                    'background': 'url(/img/background.jpg)'\n                }\n            }\n        >\n            <Box width=\"24rem\" bg=\"white\" padding=\"1rem\" \n            style={{\n                'boxShadow': '0 0 5px 1px #0000001f'\n            }}\n            backgroundColor=\"white\">\n                <Flex direction=\"column\" padding=\"1rem\" alignItems=\"center\">\n                    <Text fontSize=\"x-large\" fontWeight=\"bold\">Navi Automobile</Text>\n                    <Text color=\"gray.500\">Fill form to register</Text>\n                </Flex>\n\n                <form method=\"POST\" onSubmit={doRegister}>\n                    <VStack spacing=\"1rem\" padding=\"1rem\" alignItems=\"center\">\n                        \n                        <FormControl id=\"name\" size=\"sm\" isInvalid={errors['name']}>\n                            <FormLabel size=\"sm\" color=\"gray.700\">Your Name</FormLabel>\n                            <Input borderColor=\"blue.400\" name=\"name\" placeholder=\"Input your name\" size=\"md\" bg=\"white\"/>\n                            <FormErrorMessage>{errors['name']}</FormErrorMessage>\n                        </FormControl>\n\n                        <FormControl id=\"name\" size=\"sm\" isInvalid={errors['email']}>\n                            <FormLabel size=\"sm\" color=\"gray.700\">Email</FormLabel>\n                            <Input borderColor=\"blue.400\" name=\"email\" placeholder=\"Input your email\" size=\"md\" bg=\"white\"/>\n                            <FormErrorMessage>{errors['email']}</FormErrorMessage>\n                        </FormControl>\n\n                        <FormControl id=\"name\" size=\"sm\" isInvalid={errors['password']}>\n                            <FormLabel size=\"sm\" color=\"gray.700\">Password</FormLabel>\n                            <Input name=\"password\" borderColor=\"blue.400\" placeholder=\"Input your password\" size=\"md\" type=\"password\" bg=\"white\"/>\n                            <FormErrorMessage>{errors['password']}</FormErrorMessage>\n                        </FormControl>\n\n                        <FormControl id=\"name\" size=\"sm\" isInvalid={errors['password_confirmation']}>\n                            <FormLabel size=\"sm\" color=\"gray.700\">Confirm Password</FormLabel>\n                            <Input name=\"password_confirmation\" borderColor=\"blue.400\" placeholder=\"Confirm Password\" size=\"md\" type=\"password\" bg=\"white\"/>\n                            <FormErrorMessage>{errors['password_confirmation']}</FormErrorMessage>\n                        </FormControl>\n\n                        <Spacer height=\"2rem\"/>\n                        <VStack>\n                            <Button type=\"submit\" colorScheme=\"blue\" width=\"12rem\">Register</Button>\n                            { registered && <Text textAlign=\"center\" color=\"blue.400\">Registered. Login Now</Text>}\n                        </VStack>\n                        \n                    </VStack>\n                </form>\n\n                <VStack margin=\"1rem\">\n                    <Link onClick={function(){\n                        window.location.href = '/login'\n                    }}>Already have account. Login now</Link>\n                </VStack>\n            </Box>\n        </Stack>\n    )\n}\n\nexport default Register\n","import { Box, Button, Flex, HStack, Stat, StatArrow, StatGroup, StatHelpText, StatLabel, StatNumber, Text, VStack,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n    PopoverCloseButton,\n } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from './services/api'\n\nfunction Report() {\n\n    const [units, setUnits] = React.useState([]);\n    const [amounts, setAmounts] = React.useState([]);\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        apiClient.get('/api/topbrands')\n        .then(response => {\n            setAmounts(response.data)\n        }).catch(error => {})\n\n        apiClient.get('/api/topunits')\n        .then(response => {\n            setUnits(response.data)\n        }).catch(error => {})\n    }\n\n    return (\n        <VStack padding=\"1rem\" alignItems=\"flex-start\" spacing=\"2rem\">\n            <Text color=\"gray.900\" fontWeight=\"bold\" margin=\"1rem 0\">Top Brand Sell</Text>\n            <HStack margin=\"0 1rem 1rem 0\">\n                {\n                    units.map(function(item) {\n                        return(\n                            <Box width=\"8rem\">\n                                <Stat colorScheme=\"blue\" color=\"gray.600\" bgColor=\"gray.100\" padding=\"1rem\">\n                                    <StatLabel>Brand</StatLabel>\n                                    <StatNumber>{ item.brand }</StatNumber>\n                                    <StatHelpText>${ item.total }</StatHelpText>\n                                </Stat>\n                                </Box>\n                        )   \n                    })\n                }\n                \n            </HStack>\n\n            <Text color=\"gray.900\" fontWeight=\"bold\" margin=\"1rem 0\">Top Brand Sell</Text>\n            <HStack margin=\"0 1rem 1rem 0\">\n                {\n                    amounts.map(function(item) {\n                        return(\n                            <Box width=\"8rem\">\n                                <Stat colorScheme=\"blue\" color=\"gray.600\" bgColor=\"gray.100\" padding=\"1rem\">\n                                    <StatLabel>Brand</StatLabel>\n                                    <StatNumber>{ item.brand }</StatNumber>\n                                    <StatHelpText>{ item.total } Units</StatHelpText>\n                                </Stat>\n                                </Box>\n                        )   \n                    })\n                }\n                \n            </HStack>\n\n            <HStack>\n                <Text color=\"gray.900\">Export data to something</Text>\n            </HStack>\n\n            <Popover>\n                <PopoverTrigger>\n                    <Button variant=\"link\" colorScheme=\"blue\">Export?</Button>\n                </PopoverTrigger>\n                <PopoverContent>\n                    <PopoverArrow />\n                    <PopoverCloseButton />\n                    <PopoverHeader color=\"gray.900\">Copy Paste this JSON</PopoverHeader>\n                    <PopoverBody color=\"gray.700\">{JSON.stringify({\n                        'top_unit': units,\n                        'top_amount' : amounts\n                    })}</PopoverBody>\n                </PopoverContent>\n            </Popover>\n\n        </VStack>\n        \n    )\n}\n\nexport default Report\n","import React from 'react'\nimport {\n    AlertDialog,\n    AlertDialogBody,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogContent,\n    AlertDialogOverlay,\n    Button,\n  } from '@chakra-ui/react';\n\nfunction DeleteDialog({ item, callback }) {\n    \n    const [isOpen, setIsOpen] = React.useState(false)\n    const onClose = () => setIsOpen(false)\n    const cancelRef = React.useRef()\n\n    return (\n        <>\n            <Button onClick={() => setIsOpen(true)} size=\"xs\" leftIcon={<i className=\"la la-trash\"></i>}>\n                Delete\n            </Button>\n\n            <AlertDialog\n                isOpen={isOpen}\n                leastDestructiveRef={cancelRef}\n                onClose={onClose}\n            >\n            <AlertDialogOverlay>\n            <AlertDialogContent>\n                <AlertDialogHeader fontSize=\"md\" fontWeight=\"bold\">\n                 Delete Employee Data\n                </AlertDialogHeader>\n\n                <AlertDialogBody fontSize=\"md\">\n                    Are you sure to delete {item.name}?\n                </AlertDialogBody>\n\n                <AlertDialogFooter>\n                <Button ref={cancelRef} onClick={onClose} size=\"sm\"  leftIcon={<i className=\"la la-times\"></i>} >\n                    Cancel\n                </Button>\n                <Button colorScheme=\"red\" onClick={() => {\n                    callback(item[Object.keys(item)[0]])\n                    setIsOpen(false)\n                }} ml={3} size=\"sm\" leftIcon={<i className=\"la la-trash\"></i>}>\n                    Delete\n                </Button>\n                </AlertDialogFooter>\n            </AlertDialogContent>\n            </AlertDialogOverlay>\n        </AlertDialog>\n        </>\n    )\n}\n\nexport default DeleteDialog\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from './DeleteDialog';\n\nfunction TableView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{ item.name }</Td>\n                                <Td width=\"14rem\">\n                                <Button colorScheme=\"gray\" leftIcon={<i className=\"la la-edit\"></i>} onClick={() => {\n                                    openFormCallback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Edit</Button>\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default TableView\n","import React from 'react'\nimport {\n    FormControl,\n    FormLabel,\n    Input,\n    FormErrorMessage,\n    Select,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Button,\n    useDisclosure\n  } from '@chakra-ui/react';\n\nfunction CreateForm({ form, callback, isOpen, doClose, onClose, doOpen }) {\n\n    return (\n        <>\n            <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader fontSize=\"sm\">Create Data</ModalHeader>\n                <form method=\"POST\" onSubmit={callback}>\n                <ModalBody> \n                    { form }\n                </ModalBody>\n\n                <ModalFooter>\n                <Button mr={3} onClick={doClose} size=\"sm\" variant=\"solid\" fontWeight=\"normal\" leftIcon={<i className=\"la la-times\"></i>}>\n                    Close\n                </Button>\n                <Button type=\"submit\" size=\"sm\" colorScheme=\"blue\" leftIcon={<i className=\"la la-save\"></i>} fontWeight=\"normal\">Save</Button>\n                </ModalFooter>\n                </form>\n            </ModalContent>\n            </Modal>\n        </>\n    )\n}\n\nexport default CreateForm\n","import { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction CarTypeForm({ error, data }) {\n    return (\n        <>\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n            <FormLabel size=\"sm\">Name</FormLabel>\n            <Input name=\"name\" defaultValue={data.name && data.name} placeholder=\"Input name\" size=\"sm\"/>\n            <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n        </>\n    )\n}\n\nexport default CarTypeForm\n","import React from 'react'\nimport {\n    FormControl,\n    FormLabel,\n    Input,\n    FormErrorMessage,\n    Select,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Button,\n    useDisclosure\n  } from '@chakra-ui/react';\n\nfunction UpdateForm({ form, callback, isOpen, doClose, onClose, doOpen }) {\n\n    return (\n        <>\n            <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader fontSize=\"sm\">Change Data</ModalHeader>\n                <form method=\"POST\" onSubmit={callback}>\n                <ModalBody>\n                    {form}\n                </ModalBody>\n\n                <ModalFooter>\n                <Button mr={3} onClick={doClose} size=\"sm\" variant=\"solid\" fontWeight=\"normal\" leftIcon={<i className=\"la la-times\"></i>}>\n                    Close\n                </Button>\n                <Button type=\"submit\" loadingText=\"Saving\" size=\"sm\" colorScheme=\"blue\" leftIcon={<i className=\"la la-save\"></i>} fontWeight=\"normal\">Save</Button>\n                </ModalFooter>\n                </form>\n            </ModalContent>\n            </Modal>\n        </>\n    )\n}\n\nexport default UpdateForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport TableView from '../components/TableView'\nimport CreateForm from '../components/CreateForm'\nimport CarTypeForm from '../formdialog/CarTypeForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\n\nfunction CarTypeManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Car Type Name']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/cartypes', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/cartypes', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/cartypes/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/cartypes/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <TableView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<CarTypeForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<CarTypeForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default CarTypeManager\n","import { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction BrandForm({ error, data }) {\n    return (\n        <>\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n            <FormLabel size=\"sm\">Name</FormLabel>\n            <Input name=\"name\" defaultValue={data.name && data.name} placeholder=\"Input name\" size=\"sm\"/>\n            <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n        </>\n    )\n}\n\nexport default BrandForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport TableView from '../components/TableView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport BrandForm from '../formdialog/BrandForm';\nimport { Context } from '../Store'\n\nfunction BrandManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Brand Name']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/brands', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/brands', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/brands/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/brands/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <TableView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<BrandForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<BrandForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default BrandManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction TableView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [state, dispatch] = React.useContext(Context)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('brands', setBrands)\n        fetchAll('cartypes', setTypes)\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    console.log(brands)\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{item.vin}</Td>\n                                <Td>\n                                    {\n                                        brands.map(function(brand){\n                                            if(brand.id === item.brand){\n                                                return(\n                                                    brand.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>\n                                    {\n                                        types.map(function(type){\n                                            if(type.id === item.type){\n                                                return(\n                                                    type.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{item.option}</Td>\n                                <Td>{item.price}</Td>\n                                <Td width=\"14rem\">\n                                <Button colorScheme=\"gray\" leftIcon={<i className=\"la la-edit\"></i>} onClick={() => {\n                                    openFormCallback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Edit</Button>\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default TableView\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction CarForm({ error, data }) {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n    const [options, setOptions] = React.useState([])\n    const [models, setModels] = React.useState([])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    React.useEffect(function(){\n        fetchAll('brands', setBrands)\n        fetchAll('cartypes', setTypes)\n        fetchAll('caroptions', setOptions)\n        fetchAll('carmodels', setModels)\n    }, [])\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n\n            <FormControl id=\"amount\" size=\"sm\" isInvalid={error['amount']}>\n                <FormLabel size=\"sm\">Amount</FormLabel>\n                <Input name=\"amount\" defaultValue={1} size=\"sm\"/>\n                <FormErrorMessage>{error['amount']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"brand\" size=\"sm\" isInvalid={error['brand']}>\n                <FormLabel size=\"sm\">Brand</FormLabel>\n                <Select name=\"brand\">\n                    {brands.map(function(brand){\n                        return(\n                            <option selected={data.brand === brand.id} value={brand.id}>{brand.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['brand']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"type\" size=\"sm\" isInvalid={error['type']}>\n                <FormLabel size=\"sm\">Type</FormLabel>\n                <Select name=\"type\">\n                    {types.map(function(type){\n                        return(\n                            <option selected={data.type == type.id} value={type.id}>{type.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['type']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"model\" size=\"sm\" isInvalid={error['model']}>\n                <FormLabel size=\"sm\">Model</FormLabel>\n                <Select name=\"model\">\n                    {models.map(function(model){\n                        return(\n                            <option selected={data.model == model.id} value={model.id}>{model.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['model']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"option\" size=\"sm\" isInvalid={error['option']}>\n                <FormLabel size=\"sm\">Model</FormLabel>\n                <Select name=\"option\">\n                    {options.map(function(option){\n                        return(\n                            <option selected={data.option == option.id} value={option.id}>{option.color} Color, {option.transmission} Transmission</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['type']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"price\" size=\"sm\" isInvalid={error['price']}>\n                <FormLabel size=\"sm\">Price</FormLabel>  \n                <Input name=\"price\" defaultValue={data.price && data.price} size=\"sm\"/>\n                <FormErrorMessage>{error['price']}</FormErrorMessage>\n            </FormControl>\n            </VStack>\n        </>\n    )\n}\n\nexport default CarForm\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction CarForm({ error, data }) {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n    const [options, setOptions] = React.useState([])\n    const [models, setModels] = React.useState([])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    React.useEffect(function(){\n        fetchAll('brands', setBrands)\n        fetchAll('cartypes', setTypes)\n        fetchAll('caroptions', setOptions)\n        fetchAll('carmodels', setModels)\n    }, [])\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n\n            <FormControl id=\"vin\" size=\"sm\" isInvalid={error['vin']}>\n                <FormLabel size=\"sm\">VIN</FormLabel>\n                <Input name=\"vin\" defaultValue={data.vin} size=\"sm\"/>\n                <FormErrorMessage>{error['vin']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"brand\" size=\"sm\" isInvalid={error['brand']}>\n                <FormLabel size=\"sm\">Brand</FormLabel>\n                <Select name=\"brand\">\n                    {brands.map(function(brand){\n                        return(\n                            <option selected={data.brand === brand.id} value={brand.id}>{brand.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['brand']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"type\" size=\"sm\" isInvalid={error['type']}>\n                <FormLabel size=\"sm\">Type</FormLabel>\n                <Select name=\"type\">\n                    {types.map(function(type){\n                        return(\n                            <option selected={data.type == type.id} value={type.id}>{type.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['type']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"model\" size=\"sm\" isInvalid={error['model']}>\n                <FormLabel size=\"sm\">Model</FormLabel>\n                <Select name=\"model\">\n                    {models.map(function(model){\n                        return(\n                            <option selected={data.model == model.id} value={model.id}>{model.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['model']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"option\" size=\"sm\" isInvalid={error['option']}>\n                <FormLabel size=\"sm\">Model</FormLabel>\n                <Select name=\"option\">\n                    {options.map(function(option){\n                        return(\n                            <option selected={data.option == option.id} value={option.id}>{option.color} Color, {option.transmission} Transmission</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['type']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"price\" size=\"sm\" isInvalid={error['price']}>\n                <FormLabel size=\"sm\">Price</FormLabel>  \n                <Input name=\"price\" defaultValue={data.price && data.price} size=\"sm\"/>\n                <FormErrorMessage>{error['price']}</FormErrorMessage>\n            </FormControl>\n            </VStack>\n        </>\n    )\n}\n\nexport default CarForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport CarView from '../dataview/CarView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport CarForm from '../formdialog/CarForm';\nimport CarUpdateForm from '../formdialog/CarUpdateForm';\nimport { Context } from '../Store'\n\nfunction BrandManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Vin', 'Brand', 'Type', 'Option', 'Price']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/cars', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/cars', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/cars/' + entries.vin, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/cars/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <CarView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<CarUpdateForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<CarForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default BrandManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\n\nfunction TableView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [state, dispatch] = React.useContext(Context)\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{ item.name }</Td>\n                                <Td>{item.description}</Td>\n                                <Td width=\"14rem\">\n                                <Button colorScheme=\"gray\" leftIcon={<i className=\"la la-edit\"></i>} onClick={() => {\n                                    openFormCallback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Edit</Button>\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default TableView\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\n\nfunction CarForm({ error, data }) {\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n                <FormLabel size=\"sm\">Model Name</FormLabel>\n                <Input name=\"name\" defaultValue={data.name && data.name} size=\"sm\"/>\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n            \n            <FormControl id=\"description\" size=\"sm\" isInvalid={error['description']}>\n                <FormLabel size=\"sm\">Description</FormLabel>\n                <Input name=\"description\" defaultValue={data.description && data.description} size=\"sm\"/>\n                <FormErrorMessage>{error['description']}</FormErrorMessage>\n            </FormControl>\n            </VStack>\n        </>\n    )\n}\n\nexport default CarForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport CarModelView from '../dataview/CarModelView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport CarModelForm from '../formdialog/CarModelForm';\nimport { Context } from '../Store'\n\n\nfunction CarModelManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Model Name', 'Description']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/carmodels', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/carmodels', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/carmodels/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n\n        apiClient.delete('/api/carmodels/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <CarModelView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<CarModelForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<CarModelForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default CarModelManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\n\nfunction TableView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{ item.engine }</Td>\n                                <Td>{item.color}</Td>\n                                <Td>{ item.transmission }</Td>\n                                <Td width=\"14rem\">\n                                <Button colorScheme=\"gray\" leftIcon={<i className=\"la la-edit\"></i>} onClick={() => {\n                                    openFormCallback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Edit</Button>\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default TableView\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\n\nfunction CarForm({ error, data }) {\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['engine']}>\n                <FormLabel size=\"sm\">Engine</FormLabel>\n                <Input name=\"engine\" defaultValue={data.engine && data.engine} size=\"sm\"/>\n                <FormErrorMessage>{error['engine']}</FormErrorMessage>\n            </FormControl>\n            \n            <FormControl id=\"color\" size=\"sm\" isInvalid={error['color']}>\n                <FormLabel size=\"sm\">Color</FormLabel>\n                <Input name=\"color\" defaultValue={data.color && data.color} size=\"sm\"/>\n                <FormErrorMessage>{error['color']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"transmission\" size=\"sm\" isInvalid={error['transmission']}>\n                <FormLabel size=\"sm\">Transmission</FormLabel>\n                <Input name=\"transmission\" defaultValue={data.transmission && data.transmission} size=\"sm\"/>\n                <FormErrorMessage>{error['transmission']}</FormErrorMessage>\n            </FormControl>\n            </VStack>\n        </>\n    )\n}\n\nexport default CarForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport CarOptionView from '../dataview/CarOptionView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport CarOptionForm from '../formdialog/CarOptionForm';\nimport { Context } from '../Store'\n\n\nfunction CarOptionManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = [ 'Engine', 'Color', 'Transmission']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/caroptions', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/caroptions', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/caroptions/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n\n        apiClient.delete('/api/caroptions/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <CarOptionView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<CarOptionForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<CarOptionForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default CarOptionManager\n"," \nimport React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nfunction DealerView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{ item.name }</Td>\n                                <Td>{ item.account }</Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default DealerView\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport DealerView from '../dataview/DealerView'\nimport CreateForm from '../components/CreateForm'\nimport DealerForm from '../formdialog/DealerForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\nfunction DealerManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Dealer Name', 'UID']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/dealers', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/dealers', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/dealers/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/dealers/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <DealerView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n        </>\n    )\n}\n\nexport default DealerManager\n","import { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction EmployeeTypeForm({ error, data }) {\n    return (\n        <>\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n            <FormLabel size=\"sm\">Type Name</FormLabel>\n            <Input name=\"name\" defaultValue={data.name && data.name} placeholder=\"Input name\" size=\"sm\"/>\n            <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n        </>\n    )\n}\n\nexport default EmployeeTypeForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport TableView from '../components/TableView'\nimport CreateForm from '../components/CreateForm'\nimport EmployeeTypeForm from '../formdialog/EmployeeTypeForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\nfunction EmployeeTypeManager() {\n    \n    const head = ['Employee Type']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n    const [state, dispatch] = React.useContext(Context)\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/employeetypes', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/employeetypes', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/employeetypes/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/employeetypes/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <TableView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<EmployeeTypeForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<EmployeeTypeForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default EmployeeTypeManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction TableView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [types, setTypes] = React.useState([])\n    const [state, dispatch] = React.useContext(Context)\n\n    React.useEffect(function(){\n        fetchAll('employeetypes', setTypes)\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>\n                                    {\n                                        types.map(function(type){\n                                            if(type.id === item.type){\n                                                return(\n                                                    type.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{ item.name }</Td>\n                                <Td>{ item.email }</Td>\n                                <Td>{ item.phone }</Td>\n                                <Td>{ item.working_date }</Td>\n                                <Td>{ item.address }</Td>\n\n                                <Td width=\"14rem\">\n                                <Button colorScheme=\"gray\" leftIcon={<i className=\"la la-edit\"></i>} onClick={() => {\n                                    openFormCallback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Edit</Button>\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default TableView\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction EmployeeForm({ error, data }) {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const [types, setTypes] = React.useState([])\n    const [dealers, setDealers] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('employeetypes', setTypes)\n        fetchAll('dealers', setDealers)\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n\n            <FormControl id=\"type\" size=\"sm\" isInvalid={error['type']}>\n                <FormLabel size=\"sm\">Type</FormLabel>\n                <Select name=\"type\">\n                    {types.map(function(type){\n                        return(\n                            <option selected={data.type == type.id} value={type.id}>{type.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['type']}</FormErrorMessage>\n            </FormControl>\n            \n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n                <FormLabel size=\"sm\">Employee Name</FormLabel>\n                <Input name=\"name\" defaultValue={data.name && data.name} size=\"sm\"/>\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"email\" size=\"sm\" isInvalid={error['email']}>\n                <FormLabel size=\"sm\">Email Address</FormLabel>\n                <Input name=\"email\" defaultValue={data.email && data.email} size=\"sm\"/>\n                <FormErrorMessage>{error['email']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"phone\" size=\"sm\" isInvalid={error['phone']}>\n                <FormLabel size=\"sm\">Phone Number</FormLabel>\n                <Input name=\"phone\" defaultValue={data.phone && data.phone} size=\"sm\"/>\n                <FormErrorMessage>{error['phone']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"working_date\" size=\"sm\" isInvalid={error['working_date']}>\n                <FormLabel size=\"sm\">Start Working</FormLabel>\n                <Input type=\"date\" name=\"working_date\" defaultValue={data.working_date && data.working_date} size=\"sm\"/>\n                <FormErrorMessage>{error['working_date']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"address\" size=\"sm\" isInvalid={error['address']}>\n                <FormLabel size=\"sm\">Address</FormLabel>\n                <Input name=\"address\" defaultValue={data.address && data.address} size=\"sm\"/>\n                <FormErrorMessage>{error['address']}</FormErrorMessage>\n            </FormControl>\n\n            <Input type=\"hidden\" name=\"dealer\" value={\n                dealers.filter(function(el){\n                    return el.account === state.user.id\n                }).length === 1 && dealers.filter(function(el){\n                    return el.account === state.user.id\n                })[0].id\n            }></Input>\n\n            </VStack>\n        </>\n    )\n}\n\nexport default EmployeeForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport EmployeeView from '../dataview/EmployeeView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport EmployeeForm from '../formdialog/EmployeeForm';\nimport { Context } from '../Store'\n\nfunction BrandManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Type', 'Name', 'Email', 'Phone', 'Working Date', 'Address']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/employees', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        })\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/employees', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/employees/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/employees/' + id, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <EmployeeView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<EmployeeForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<EmployeeForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default BrandManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction SupplierView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [state, dispatch] = React.useContext(Context)\n\n    const [models, setModels] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('carmodels', setModels)\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{ item.name }</Td>\n                                <Td>{ item.account }</Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default SupplierView\n","import { FormControl, FormErrorMessage, FormLabel, Input, VStack } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction CarTypeForm({ error, data }) {\n    return (\n        <>\n        <VStack spacing=\"1rem\">\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n                <FormLabel size=\"sm\">Supplier Name</FormLabel>\n                <Input name=\"name\" defaultValue={data.name && data.name} placeholder=\"Input name\" size=\"sm\"/>\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"description\" size=\"sm\" isInvalid={error['description']}>\n                <FormLabel size=\"sm\">Supplier description</FormLabel>\n                <Input name=\"description\" defaultValue={data.description && data.description} placeholder=\"Input description\" size=\"sm\"/>\n                <FormErrorMessage>{error['description']}</FormErrorMessage>\n            </FormControl>\n        </VStack>\n        </>\n    )\n}\n\nexport default CarTypeForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport SupplierView from '../dataview/SupplierView'\nimport CreateForm from '../components/CreateForm'\nimport SupplierForm from '../formdialog/SupplierForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\nfunction SupplierManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Supplier Name', 'UID']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/suppliers', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/suppliers', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/suppliers/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n\n        apiClient.delete('/api/suppliers/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <SupplierView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<SupplierForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<SupplierForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default SupplierManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction ManufacturerView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [state, dispatch] = React.useContext(Context)\n\n    const [models, setModels] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('carmodels', setModels)\n    }, [])\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{ item.name }</Td>\n                                <Td>{ item.account }</Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default ManufacturerView\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport ManufacturerView from '../dataview/ManufacturerView'\nimport CreateForm from '../components/CreateForm'\nimport ManufacturerForm from '../formdialog/ManufacturerForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\nfunction ManufacturerManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Dealer Name', 'UID']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/manufacturers', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/manufacturers', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/manufacturers/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/manufacturers/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <ManufacturerView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n\n        </>\n    )\n}\n\nexport default ManufacturerManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction PartView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [state, dispatch] = React.useContext(Context)\n\n    const [suppliers, setSuppliers] = React.useState([])\n    const [manufacturers, setManufacturers] = React.useState([])\n    const [models, setModels] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('suppliers', setSuppliers)\n        fetchAll('manufacturers', setManufacturers)\n        fetchAll('carmodels', setModels)\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{item.code}</Td>\n                                <Td>\n                                    {\n                                        suppliers.map(function(supplier){\n                                            if(supplier.id === item.supplier){\n                                                return(\n                                                    supplier.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>\n                                    {\n                                        manufacturers.map(function(manufacturer){\n                                            if(manufacturer.id === item.manufacturer){\n                                                return(\n                                                    manufacturer.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>\n                                    {\n                                        models.map(function(model){\n                                            if(model.id === item.model){\n                                                return(\n                                                    model.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{item.name}</Td>\n                                <Td>{ item.description }</Td>\n                                \n                                <Td width=\"14rem\">\n                                <Button colorScheme=\"gray\" leftIcon={<i className=\"la la-edit\"></i>} onClick={() => {\n                                    openFormCallback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Edit</Button>\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default PartView\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction PartForm({ error, data }) {\n    const [suppliers, setSuppliers] = React.useState([])\n    const [manufacturers, setManufacturers] = React.useState([])\n    const [models, setModels] = React.useState([])\n    const [state, dispatch] = React.useContext(Context)\n\n    React.useEffect(function(){\n        fetchAll('suppliers', setSuppliers)\n        fetchAll('manufacturers', setManufacturers)\n        fetchAll('carmodels', setModels)\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n                \n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['code']}>\n                <FormLabel size=\"sm\">Code</FormLabel>\n                <Input name=\"code\" defaultValue={data.code && data.code} size=\"sm\"/>\n                <FormErrorMessage>{error['code']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"supplier\" size=\"sm\" isInvalid={error['supplier']}>\n                <FormLabel size=\"sm\">Supplier</FormLabel>\n                <Select name=\"supplier\">\n                    <option value={0}>None</option>\n\n                    {suppliers.map(function(supplier){\n                        return(\n                            <option selected={data.supplier === supplier.id} value={supplier.id}>{supplier.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['brand']}</FormErrorMessage>\n            </FormControl>\n            <FormControl id=\"manufacturer\" size=\"sm\" isInvalid={error['manufacturer']}>\n                <FormLabel size=\"sm\">Manufacturer</FormLabel>\n                <Select name=\"manufacturer\">\n                    <option value={0}>None</option>\n                    {manufacturers.map(function(manufacturer){\n                        return(\n                            <option selected={data.manufacturer == manufacturer.id} value={manufacturer.id}>{manufacturer.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['manufacturer']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"model\" size=\"sm\" isInvalid={error['model']}>\n                <FormLabel size=\"sm\">Model</FormLabel>\n                <Select name=\"model\">\n                    {models.map(function(model){\n                        return(\n                            <option selected={data.model == model.id} value={model.id}>{model.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['model']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n                <FormLabel size=\"sm\">Part Name</FormLabel>\n                <Input name=\"name\" defaultValue={data.name && data.name} size=\"sm\"/>\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"description\" size=\"sm\" isInvalid={error['description']}>\n                <FormLabel size=\"sm\">Description</FormLabel>\n                <Input name=\"description\" defaultValue={data.description && data.description} size=\"sm\"/>\n                <FormErrorMessage>{error['description']}</FormErrorMessage>\n            </FormControl>\n\n            </VStack>\n        </>\n    )\n}\n\nexport default PartForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport PartView from '../dataview/PartView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport PartForm from '../formdialog/PartForm';\nimport { Context } from '../Store'\n\nfunction PartManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Code', 'Supplier', 'Manufacturer', 'Model', 'Part Name', 'Description']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/parts', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/parts', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/parts/' + entries.code, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/parts/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <PartView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<PartForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<PartForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default PartManager\n","import { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction CarTypeForm({ error, data }) {\n    return (\n        <>\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n            <FormLabel size=\"sm\">Name</FormLabel>\n            <Input name=\"name\" defaultValue={data.name && data.name} placeholder=\"Input name\" size=\"sm\"/>\n            <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n        </>\n    )\n}\n\nexport default CarTypeForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport TableView from '../components/TableView'\nimport CreateForm from '../components/CreateForm'\nimport TransactionTypeForm from '../formdialog/TransactionTypeForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\nfunction TransactionTypeManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Transaction Type Name']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/transactiontypes', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/transactiontypes', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/transactiontypes/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/transactiontypes/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <TableView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<TransactionTypeForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<TransactionTypeForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default TransactionTypeManager\n","import { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction CarTypeForm({ error, data }) {\n    return (\n        <>\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n            <FormLabel size=\"sm\">Name</FormLabel>\n            <Input name=\"name\" defaultValue={data.name && data.name} placeholder=\"Input name\" size=\"sm\"/>\n            <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n        </>\n    )\n}\n\nexport default CarTypeForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport TableView from '../components/TableView'\nimport CreateForm from '../components/CreateForm'\nimport TransactionStatusForm from '../formdialog/TransactionStatusForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\n\nfunction TransactionStatusManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Transaction Status Name']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/transactionstatuses', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/transactionstatuses', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/transactionstatuses/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/transactionstatuses/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <TableView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<TransactionStatusForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<TransactionStatusForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default TransactionStatusManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n    Badge,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction TransactionView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n\n    const [models, setModels] = React.useState([])\n    const [employees, setEmployees] = React.useState([])\n    const [transactionTypes, setTransactionTypes] = React.useState([])\n    const [statuses, setStatuses] = React.useState([])\n\n    const [state, dispatch] = React.useContext(Context)\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    React.useEffect(function(){\n        fetchAll('carmodels', setModels)\n        fetchAll('employees', setEmployees)\n        fetchAll('transactiontypes', setTransactionTypes)\n        fetchAll('transactionstatuses', setStatuses)\n    }, [])\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    const findColor = (status) => {\n        console.log(status)\n        switch(status){\n            case 'Requested':\n                return 'yellow';\n            case 'Accepted':\n                return 'green';\n        }\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>\n                                    {\n                                        employees.map(function(employee){\n                                            if(employee.id === item.employee){\n                                                return(\n                                                    employee.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>\n                                    {\n                                        transactionTypes.map(function(type){\n                                            if(type.id === item.type){\n                                                return(\n                                                    type.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>\n                                    {\n                                        models.map(function(model){\n                                            if(model.id === item.model){\n                                                return(\n                                                    model.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{ item.amount }</Td>\n                                <Td>\n                                    {\n                                        statuses.map(function(status){\n                                            if(status.id === item.status){\n                                                return(\n                                                    <Badge colorScheme={findColor(status.name)}>\n                                                    { status.name }\n                                                    </Badge>\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{ item.created_at }</Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default TransactionView\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select, Badge } from '@chakra-ui/react'\nimport React from 'react'\n\nimport { Context } from '../Store'\nimport apiClient from '../services/api';\n\nfunction TransactionForm({ error, data }) {\n    \n    const [brands, setBrands] = React.useState([])\n    const [models, setModels] = React.useState([])\n    const [dealers, setDealers] = React.useState([])\n    const [employees, setEmployees] = React.useState([])\n    const [transactionTypes, setTransactionTypes] = React.useState([])\n    const [statuses, setStatuses] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('brands', setBrands)\n        fetchAll('carmodels', setModels)\n        fetchAll('dealers', setDealers)\n        fetchAll('employees', setEmployees)\n        fetchAll('transactiontypes', setTransactionTypes)\n        fetchAll('transactionstatuses', setStatuses)\n    }, [])\n    \n    const [state, dispatch] = React.useContext(Context)\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n\n            <FormControl id=\"model\" size=\"sm\" isInvalid={error['model']}>\n                <FormLabel size=\"sm\">Vehicle Model</FormLabel>\n                <Select name=\"model\">\n                    {models.map(function(model){\n                        return(\n                            <option selected={data.model === model.id} value={model.id}>{model.id} - {model.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['model']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"employee\" size=\"sm\" isInvalid={error['employee']}>\n                <FormLabel size=\"sm\">Admin</FormLabel>\n                <Select name=\"employee\">\n                    {employees.map(function(employee){\n                        return(\n                            <option selected={data.employee === employee.id} value={employee.id}>{employee.id} - {employee.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['employee']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"amount\" size=\"sm\" isInvalid={error['amount']}>\n                <FormLabel size=\"sm\">Amount</FormLabel>\n                <Input type=\"number\" name=\"amount\"></Input>\n                <FormErrorMessage>{error['amount']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"type\" size=\"sm\" isInvalid={error['type']}>\n                <FormLabel size=\"sm\">Transaction Type</FormLabel>\n                <Select name=\"type\">\n                    {transactionTypes.map(function(type){\n                        return(\n                            <option selected={data.type == type.id} value={type.id}>{type.name}</option>\n                        )\n                    })}\n                </Select>\n                <FormErrorMessage>{error['type']}</FormErrorMessage>\n            </FormControl>\n\n            <Input type=\"hidden\" name=\"dealer\" value={\n                dealers.filter(function(el){\n                    return el.account === state.user.id\n                }).length === 1 && dealers.filter(function(el){\n                    return el.account === state.user.id\n                })[0].id\n            }></Input>\n\n            <Input type=\"hidden\" name=\"status\"  value=\"1\"></Input>\n\n            </VStack>\n        </>\n    )\n}\n\nexport default TransactionForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport TransactionView from '../dataview/TransactionView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport TransactionForm from '../formdialog/TransactionForm';\nimport { Context } from '../Store'\n\nfunction TransactionManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Admin', 'Type', 'Model', 'Amount', 'Status', 'Date']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n    \n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/transactions', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/transactions', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/transactions/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/transactions/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <TransactionView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<TransactionForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<TransactionForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default TransactionManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\n\nfunction IndividualCustomerView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [state, dispatch] = React.useContext(Context)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('brands', setBrands)\n        fetchAll('cartypes', setTypes)\n    }, [])\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n    \n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{item.name}</Td>\n                                <Td>\n                                    {\n                                        item.gender === 'm' ? 'Male' : 'Female'\n                                    }\n                                </Td>\n                                <Td>{item.address}</Td>\n                                <Td>{item.phone}</Td>\n                                <Td width=\"14rem\">\n                                <Button colorScheme=\"gray\" leftIcon={<i className=\"la la-edit\"></i>} onClick={() => {\n                                    openFormCallback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Edit</Button>\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default IndividualCustomerView\n","import { FormControl, FormErrorMessage, FormLabel, VStack, Input, Select } from '@chakra-ui/react'\nimport React from 'react'\n\nimport apiClient from '../services/api';\n\nfunction Customer({ error, data }) {\n    \n    return (\n        <>\n            <VStack spacing=\"1rem\">\n\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n                <FormLabel size=\"sm\">Name</FormLabel>\n                <Input name=\"name\" defaultValue={data.name && data.name} size=\"sm\"/>\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"gender\" size=\"sm\" isInvalid={error['gender']}>\n                <FormLabel size=\"sm\">Gender</FormLabel>\n                <Select name=\"gender\">\n                    <option value=\"M\" selected={data.gender =='m'}>Male</option>\n                    <option value=\"F\" selected={data.gender =='f'}>Female</option>\n                </Select>\n                <FormErrorMessage>{error['gender']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"address\" size=\"sm\" isInvalid={error['address']}>\n                <FormLabel size=\"sm\">Address</FormLabel>\n                <Input name=\"address\" defaultValue={data.address && data.address} size=\"sm\"/>\n                <FormErrorMessage>{error['address']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"phone\" size=\"sm\" isInvalid={error['phone']}>\n                <FormLabel size=\"sm\">Phone</FormLabel>\n                <Input name=\"phone\" defaultValue={data.phone && data.phone} size=\"sm\"/>\n                <FormErrorMessage>{error['phone']}</FormErrorMessage>\n            </FormControl>\n\n            </VStack>\n        </>\n    )\n}\n\nexport default Customer\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport CustomerView from '../dataview/CustomerView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport CustomerForm from '../formdialog/CustomerForm';\nimport { Context } from '../Store'\n\nfunction IndividualCustomerManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Name', 'Gender', 'Address', 'Phone']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/customers', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        })\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        console.log(entries)\n        apiClient.post('/api/customers', entries, config)\n        .then(response => {\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        console.log(entries)\n        apiClient.patch('/api/customers/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n        console.log(id)\n\n        apiClient.delete('/api/customers/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <CustomerView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <UpdateForm form={<CustomerForm error={errors} data={updateFormData} />}\n                callback={doUpdate}\n                isOpen={updateFormOpen} \n                onClose={onUpdateFormClose} \n                doClose={doUpdateFormClose}\n                doOpen={doUpdateFormOpen}\n            />\n\n            <CreateForm form={<CustomerForm error={errors} data=\"\" />}\n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default IndividualCustomerManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n    Badge,\n    Text,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction TransactionRequestView({ dataset, callback }) {\n\n    const [models, setModels] = React.useState([])\n    const [employees, setEmployees] = React.useState([])\n    const [transactionTypes, setTransactionTypes] = React.useState([])\n    const [statuses, setStatuses] = React.useState([])\n\n    const [state, dispatch] = React.useContext(Context)\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    React.useEffect(function(){\n        fetchAll('carmodels', setModels)\n        fetchAll('employees', setEmployees)\n        fetchAll('transactiontypes', setTransactionTypes)\n        fetchAll('transactionstatuses', setStatuses)\n    }, [])\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    const findColor = (status) => {\n        console.log(status)\n        switch(status){\n            case 'Requested':\n                return 'yellow';\n            case 'Accepted':\n                return 'green';\n        }\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>\n                                    {\n                                        employees.map(function(employee){\n                                            if(employee.id == item.employee){\n                                                return(\n                                                    employee.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>\n                                    {\n                                        transactionTypes.map(function(type){\n                                            if(type.id === item.type){\n                                                return(\n                                                    type.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>\n                                    {\n                                        models.map(function(model){\n                                            if(model.id === item.model){\n                                                return(\n                                                    model.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{ item.amount }</Td>\n                                <Td>\n                                    {\n                                        statuses.map(function(status){\n                                            if(status.id === item.status){\n                                                return(\n                                                    <Badge colorScheme={findColor(status.name)}>\n                                                    { status.name }\n                                                    </Badge>\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{ item.created_at }</Td>\n                                <Td width=\"14rem\">\n                                {\n                                    item.status == 1 ? \n                                    <Button colorScheme=\"green\" leftIcon={<i className=\"la la-check\"></i>} onClick={() => {\n                                    callback(item)\n                                }} size=\"xs\" marginRight=\".5rem\" >Accept</Button>\n                                : <Text>Accepted</Text>\n                                }\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default TransactionRequestView\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport TransactionRequestView from '../dataview/TransactionRequestView'\nimport CreateForm from '../components/CreateForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport TransactionForm from '../formdialog/TransactionForm';\nimport { Context } from '../Store'\n\nfunction TransactionRequestManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Admin', 'Type', 'Model', 'Amount', 'Status', 'Date']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const [brands, setBrands] = React.useState([])\n    const [types, setTypes] = React.useState([])\n    \n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        })\n    }\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/transactions', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doUpdate = function(item){\n\n        // check the cars\n        apiClient.get('/api/transfer/' + item.id + '/' + item.model + '/' + item.amount, config)\n        .then(response => {\n            apiClient.patch('/api/transactions/' + item.id, {\n            status: 2\n            }, config)\n            .then(response => {\n                fetchData()\n            }).catch(error => {\n                if(error.response.status == 422){\n                    setErrors(error.response.data.errors)\n                }\n            })\n        })\n        .catch(error => {\n            alert('this is error and you dont know what you doing...')\n        })\n\n        \n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    return (\n        <>\n            <TransactionRequestView dataset={{head: head, body: data}} callback={doUpdate} />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n        </>\n    )\n}\n\nexport default TransactionRequestManager\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction InventoryView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n    const [state, dispatch] = React.useContext(Context)\n\n    const [suppliers, setSuppliers] = React.useState([])\n    const [manufacturers, setManufacturers] = React.useState([])\n    const [models, setModels] = React.useState([])\n\n    React.useEffect(function(){\n        fetchAll('suppliers', setSuppliers)\n        fetchAll('manufacturers', setManufacturers)\n        fetchAll('carmodels', setModels)\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        console.log(item)\n                        return(\n                            <Tr>\n                                <Td>{item.car}</Td>\n                                <Td>{item.sold == 1 ? 'Yes' : 'No'}</Td>\n                                <Td>{item.created_at}</Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default InventoryView\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport InventoryView from '../dataview/InventoryView'\nimport CreateForm from '../components/CreateForm'\nimport DealerForm from '../formdialog/DealerForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\nimport { Context } from '../Store'\n\nfunction DealerManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Car VIN', 'Is Sold', 'Date']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/inventories', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n    \n    return (\n        <>\n            <InventoryView dataset={{head: head, body: data}} />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n        </>\n    )\n}\n\nexport default DealerManager\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n} from '@chakra-ui/react';\n\nfunction MainMenu() {\n    const menuItems = [\n        {\n            'label': 'User Menu',\n            'items': [\n            {\n                'link': '/search',\n                'label': 'Search',\n                'icon' : <i className=\"la la-search\"></i>,\n            },\n            {\n                'link': '/contact',\n                'label': 'Contact',\n                'icon' : <i className=\"la la-envelope\"></i>,\n            },\n            {\n                'link': '/about',\n                'label': 'About',\n                'icon' : <i className=\"la la-info-circle\"></i>,\n            }\n            ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {/* <Text fontSize=\"xs\" fontWeight=\"bold\" paddingLeft=\".3rem\" marginBottom=\".5rem\" marginTop=\"1rem\">{menu.label}</Text> */}\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default MainMenu\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n    Box,\n} from '@chakra-ui/react';\n\nimport { useHistory } from 'react-router-dom'\n\nfunction CustomerMenu() {\n\n    const history = useHistory()\n\n    const menuItems = [\n        {\n          'label': 'Admin Menu',\n          'items': [\n            {\n              'link': '/admin/customers',\n              'label': 'Customer',\n              'icon' : <i className=\"la la-building\"></i>,\n            },\n          ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {/* <Text fontSize=\"xs\" fontWeight=\"bold\" paddingLeft=\".3rem\" marginBottom=\".5rem\" marginTop=\"1rem\">{menu.label}</Text> */}\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        onClick={function() {\n                          history.push(item.link)\n                        }}\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default CustomerMenu\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n    Box,\n} from '@chakra-ui/react';\n\nimport { useHistory } from 'react-router-dom'\n\nfunction CarMenu() {\n\n    const history = useHistory()\n\n    const menuItems = [\n        {\n          'label': 'Admin Menu',\n          'items': [\n            {\n              'link': '/admin/brands',\n              'label': 'Brand',\n              'icon' : <i className=\"la la-copyright\"></i>,\n            },\n            {\n              'link': '/admin/cartypes',\n              'label': 'Car Type',\n              'icon' : <i className=\"la la-car-side\"></i>,\n            },\n            ,\n            {\n              'link': '/admin/carmodels',\n              'label': 'Car Model',\n              'icon' : <i className=\"la la-truck-pickup\"></i>,\n            },\n            {\n              'link': '/admin/caroptions',\n              'label': 'Car Options',\n              'icon' : <i className=\"la la-taxi\"></i>,\n            },\n            {\n              'link': '/admin/cars',\n              'label': 'Cars',\n              'icon' : <i className=\"la la-car-alt\"></i>,\n            }\n          ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {/* <Text fontSize=\"xs\" fontWeight=\"bold\" paddingLeft=\".3rem\" marginBottom=\".5rem\" marginTop=\"1rem\">{menu.label}</Text> */}\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        onClick={function() {\n                          history.push(item.link)\n                        }}\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default CarMenu\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n    Box,\n} from '@chakra-ui/react';\n\nimport { useHistory } from 'react-router-dom'\n\nfunction PartMenu() {\n\n    const history = useHistory()\n\n    const menuItems = [\n        {\n          'label': 'Admin Menu',\n          'items': [\n            {\n              'link': '/admin/parts',\n              'label': 'Parts',\n              'icon' : <i className=\"la la-puzzle-piece\"></i>,\n            },\n          ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {/* <Text fontSize=\"xs\" fontWeight=\"bold\" paddingLeft=\".3rem\" marginBottom=\".5rem\" marginTop=\"1rem\">{menu.label}</Text> */}\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        onClick={function() {\n                          history.push(item.link)\n                        }}\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default PartMenu\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n    Box,\n} from '@chakra-ui/react';\n\nimport { useHistory } from 'react-router-dom'\n\nfunction TransactionMenu() {\n\n    const history = useHistory()\n\n    const menuItems = [\n        {\n          'label': 'Admin Menu',\n          'items': [\n            // {\n            //   'link': '/admin/transactionstatuses',\n            //   'label': 'Transaction Status',\n            //   'icon' : <i className=\"la la-tasks\"></i>,\n            // },\n            // {\n            //   'link': '/admin/transactiontypes',\n            //   'label': 'Transaction Types',\n            //   'icon' : <i className=\"la la-quote-left\"></i>,\n            // },\n            {\n              'link': '/admin/transactions',\n              'label': 'Transaction',\n              'icon' : <i className=\"la la-money-check\"></i>,\n            },\n            {\n              'link': '/admin/inventories',\n              'label': 'Inventory',\n              'icon' : <i className=\"la la-file-alt\"></i>,\n            },\n          ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {/* <Text fontSize=\"xs\" fontWeight=\"bold\" paddingLeft=\".3rem\" marginBottom=\".5rem\" marginTop=\"1rem\">{menu.label}</Text> */}\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        onClick={function() {\n                          history.push(item.link)\n                        }}\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default TransactionMenu\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n} from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nfunction AccountMenu() {\n\n    const history = useHistory();\n    const menuItems = [\n        {\n            'label': 'User Menu',\n            'items': [\n            {\n                'link': '/admin/admins',\n                'label': 'Create Account',\n                'icon' : <i className=\"la la-user-plus\"></i>,\n            },\n            {\n                'link': '/admin/dealers',\n                'label': 'Dealer',\n                'icon' : <i className=\"la la-store\"></i>,\n            },\n            {\n                'link': '/admin/manufacturers',\n                'label': 'Manufacturer',\n                'icon' : <i className=\"la la-industry\"></i>,\n            },\n            {\n                'link': '/admin/suppliers',\n                'label': 'Supplier',\n                'icon' : <i className=\"la la-boxes\"></i>,\n            }\n            ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        onClick={function() {\n                          history.push(item.link)\n                        }}\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default AccountMenu\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n    Box,\n} from '@chakra-ui/react';\n\nimport { useHistory } from 'react-router-dom'\n\nfunction EmployeeMenu() {\n\n    const history = useHistory()\n\n    const menuItems = [\n        {\n          'label': 'Admin Menu',\n          'items': [\n            {\n              'link': '/admin/employeetypes',\n              'label': 'Employee Type',\n              'icon' : <i className=\"la la-copyright\"></i>,\n            },\n            {\n              'link': '/admin/employees',\n              'label': 'Employee  ',\n              'icon' : <i className=\"la la-car-side\"></i>,\n            },\n          ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {/* <Text fontSize=\"xs\" fontWeight=\"bold\" paddingLeft=\".3rem\" marginBottom=\".5rem\" marginTop=\"1rem\">{menu.label}</Text> */}\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        onClick={function() {\n                          history.push(item.link)\n                        }}\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default EmployeeMenu\n","import React from 'react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    Button,\n  } from '@chakra-ui/react';\nimport DeleteDialog from '../components/DeleteDialog';\n\nimport apiClient from '../services/api';\nimport { Context } from '../Store'\n\nfunction PartView({ dataset, deleteCallback, updateForm, openFormCallback }) {\n\n    const [state, dispatch] = React.useContext(Context)\n    const [types, setTypes] = React.useState([])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    React.useEffect(function(){\n        fetchAll('usertypes', setTypes)\n    }, [])\n\n    const fetchAll = (name, setter) => {\n        apiClient.get('/api/' + name, config)\n        .then(response => {\n            setter(response.data)\n        }).catch(error => {})\n    }\n\n    return (\n        <Table variant=\"striped\" textColor=\"gray.700\" colorScheme=\"blackAlpha\" size=\"md\">\n            <Thead>\n            <Tr>\n                {\n                    dataset.head.map(function(head){\n                        return(\n                            <Th>{head}</Th>\n                        )\n                    })\n                }\n                <Th>Options</Th>\n            </Tr>\n            </Thead>\n            <Tbody fontSize=\"sm\">\n                {\n                    dataset.body.map(function(item){\n                        return(\n                            <Tr>\n                                <Td>{item.name}</Td>\n                                <Td>{item.email}</Td>\n                                <Td>\n                                    {\n                                        types.map(function(type){\n                                            if(type.id === item.type){\n                                                return(\n                                                    type.name\n                                                )\n                                            }\n                                        })\n                                    }\n                                </Td>\n                                <Td>{ item.id }</Td>\n                                <Td width=\"14rem\">\n                                    <DeleteDialog item={item} callback={deleteCallback} />\n                                </Td>\n                            </Tr>\n                        )\n                    })\n                }\n            </Tbody>\n        </Table>\n    )\n}\n\nexport default PartView\n","import { FormControl, FormErrorMessage, FormLabel, Input, Select, VStack } from '@chakra-ui/react'\nimport React from 'react'\n\nfunction BrandForm({ error, data }) {\n    return (\n        <>\n        <VStack spacing=\"1rem\">\n            \n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n                <FormLabel size=\"sm\">Name</FormLabel>\n                <Input name=\"name\" defaultValue={data.name && data.name} placeholder=\"Input name\" size=\"sm\"/>\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"email\" size=\"sm\" isInvalid={error['email']}>\n                <FormLabel size=\"sm\">Email</FormLabel>\n                <Input name=\"email\" defaultValue={data.email && data.email} placeholder=\"Input email\" size=\"sm\"/>\n                <FormErrorMessage>{error['email']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl id=\"name\" size=\"sm\" isInvalid={error['name']}>\n                <FormLabel size=\"sm\">Account Type</FormLabel>\n                <Select name=\"type\">\n                    <option value=\"1\">Automobile</option>\n                    <option value=\"2\">Dealer</option>\n                    <option value=\"3\">Supplier</option>\n                    <option value=\"4\">Manufacturer</option>\n                </Select>\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n            </FormControl>\n\n            <FormControl>\n                <FormLabel size=\"sm\">Password</FormLabel>\n                <Input disabled type=\"text\" value=\"navi\" size=\"sm\"/>\n            </FormControl>\n            \n        </VStack>\n        </>\n    )\n}\n\nexport default BrandForm\n","import { Box, Button, Progress } from '@chakra-ui/react'\nimport React from 'react'\nimport AdminView from '../dataview/AdminView'\nimport CreateForm from '../components/CreateForm'\nimport AdminForm from '../formdialog/AdminForm'\n\nimport apiClient from '../services/api';\nimport UpdateForm from '../components/UpdateForm'\n\nimport { Context } from '../Store'\n\nfunction AdminManager() {\n    const [state, dispatch] = React.useContext(Context)\n    \n    const head = ['Name', 'Email', 'Account Type', 'UID']\n    // data from database\n    const [data, setData] = React.useState([]);\n\n    // error from database\n    const [errors, setErrors] = React.useState({})\n\n    // loading ?\n    const [loading, setLoading] = React.useState(true)\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n    \n\n    const fetchData = function() {\n        setLoading(true)\n        apiClient.get('/api/admins', config)\n        .then(response => {\n            setData(response.data)\n            setLoading(false)\n        }).catch(error => {})\n    }\n\n    const doCreate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        const entries = Object.fromEntries(formdata)\n\n        apiClient.post('/api/admins', entries, config)\n        .then(response => {\n            switch(entries.type){\n                case '2':\n                    apiClient.post('/api/dealers', {\n                        'account': response.data.id,\n                        'name': response.data.name\n                    }, config)\n                    break;\n                case '3':\n                    apiClient.post('/api/suppliers', {\n                        'account': response.data.id,\n                        'name': response.data.name\n                    }, config)\n                    break;\n                case '4':\n                    apiClient.post('/api/manufacturers', {\n                        'account': response.data.id,\n                        'name': response.data.name\n                    }, config)\n                    break;\n            }\n\n            setCreateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n    const doUpdate = function(event){\n        event.preventDefault()\n        const formdata = new FormData(event.target)\n        let entries = Object.fromEntries(formdata)\n        entries = Object.assign(updateFormData, entries)\n\n        apiClient.patch('/api/admins/' + entries.id, entries, config)\n        .then(response => {\n            setUpdateFormOpen(false)\n            fetchData()\n        }).catch(error => {\n            if(error.response.status == 422){\n                setErrors(error.response.data.errors)\n            }\n        })\n    }\n\n    const doDelete = function(id){\n        setLoading(true)\n\n        apiClient.delete('/api/admins/' + id, config)\n        .then(response => {\n            fetchData()\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error.response)\n        })\n    }\n\n    const [createFormOpen, setCreateFormOpen] = React.useState(false)\n\n    const onCreateFormClose = () => {\n        setErrors([])\n    }\n\n    const doCreateFormClose = () => {\n        setCreateFormOpen(false)\n        onCreateFormClose()\n    }\n\n    const doCreateFormOpen = () => {\n        setCreateFormOpen(true)\n    }\n\n    const [updateFormOpen, setUpdateFormOpen] = React.useState(false)\n    const [updateFormData, setUpdateFormData] = React.useState({})\n\n    const onUpdateFormClose = () => {\n        setErrors([])\n    }\n\n    const doUpdateFormClose = () => {\n        setUpdateFormOpen(false)\n        onUpdateFormClose()\n    }\n\n    const doUpdateFormOpen = () => {\n        setUpdateFormOpen(true)\n    }\n\n    const doOpenForm = (item) => {\n        setUpdateFormData(item)\n        setUpdateFormOpen(true)\n    }\n\n    return (\n        <>\n            <AdminView dataset={{head: head, body: data}} deleteCallback={doDelete} openFormCallback={doOpenForm} />\n\n            <CreateForm form={<AdminForm error={errors} data=\"\" />} \n                callback={doCreate}  \n                isOpen={createFormOpen} \n                onClose={onCreateFormClose} \n                doClose={doCreateFormClose}\n                doOpen={doCreateFormOpen}\n            />\n\n            {\n                loading && <Progress size=\"sm\" isIndeterminate />\n            }\n            <Box position=\"absolute\" bottom=\"1rem\" right=\"1rem\" overflow=\"hidden\">\n                <Button colorScheme=\"blue\" leftIcon={<i className=\"la la-plus\"></i>} onClick={doCreateFormOpen} size=\"md\" marginRight=\".5rem\" >Create New</Button>\n            </Box>\n        </>\n    )\n}\n\nexport default AdminManager\n","import React from 'react'\nimport {\n    Text,\n    Flex,\n    Button,\n    Box,\n} from '@chakra-ui/react';\n\nimport { useHistory } from 'react-router-dom'\n\nfunction RequestMenu() {\n\n    const history = useHistory()\n\n    const menuItems = [\n        {\n          'label': 'Admin Menu',\n          'items': [\n            {\n              'link': '/admin/requests',\n              'label': 'Purchase Request',\n              'icon' : <i className=\"la la-shopping-bag\"></i>,\n            },\n            {\n              'link': '/admin/reports',\n              'label': 'Transaction Report',\n              'icon' : <i className=\"la la-file-alt\"></i>,\n            },\n          ]\n        }\n    ]\n\n    return (\n        <Flex direction=\"column\">\n            {\n            menuItems.map(function(menu){\n                return(\n                <>\n                {/* <Text fontSize=\"xs\" fontWeight=\"bold\" paddingLeft=\".3rem\" marginBottom=\".5rem\" marginTop=\"1rem\">{menu.label}</Text> */}\n                {\n                    menu.items.map(function(item){\n                    return(\n                        <Button \n                        size=\"md\" \n                        justifyContent=\"flex-start\" \n                        colorScheme=\"whiteAlpha\" \n                        bg=\"transparent\"\n                        leftIcon={item.icon}\n                        fontWeight=\"normal\"\n                        borderRadius=\"3px\"\n                        onClick={function() {\n                          history.push(item.link)\n                        }}\n                        >{item.label}</Button>\n                    )\n                    })\n                }\n                </>\n                )\n            })\n            }\n\n        </Flex>\n    )\n}\n\nexport default RequestMenu\n","import React from 'react'\nimport {\n    Flex,\n    Box,\n    Spacer,\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    Stack,\n    Button,\n    Accordion,\n    AccordionItem,\n    AccordionButton,\n    AccordionPanel,\n    AccordionIcon,\n    Text,\n  } from '@chakra-ui/react';\nimport { Route, useHistory } from 'react-router-dom'\nimport Preferences from './Preferences'\nimport Register from './Register'\nimport Report from './Report'\n\nimport CarTypeManager from './manager/CarTypeManager';\nimport BrandManager from './manager/BrandManager';\nimport CarManager from './manager/CarManager';\nimport CarModelManager from './manager/CarModelManager';\nimport CarOptionManager from './manager/CarOptionManager';\nimport DealerManager from './manager/DealerManager';\nimport EmployeeTypeManager from './manager/EmployeeTypeManager';\nimport EmployeeManager from './manager/EmployeeManager';\nimport SupplierManager from './manager/SupplierManager';\nimport ManufacturerManager from './manager/ManufacturerManager';\nimport PartManager from './manager/PartManager';\nimport TransactionTypeManager from './manager/TransactionTypeManager';\nimport TransactionStatusManager from './manager/TransactionStatusManager';\nimport TransactionManager from './manager/TransactionManager';\nimport CustomerManager from './manager/CustomerManager';\nimport TransactionRequestManager from './manager/TransactionRequestManager';\nimport InventoryManager from './manager/InventoryManager';\n\nimport MainMenu from './menu/MainMenu';\nimport CustomerMenu from './menu/CustomerMenu';\nimport CarMenu from './menu/CarMenu';\nimport PartMenu from './menu/PartMenu';\nimport TransactionMenu from './menu/TransactionMenu';\nimport UserMenu from './menu/UserMenu';\nimport AccountMenu from './menu/AccountMenu';\nimport EmployeeMenu from './menu/EmployeeMenu';\nimport AdminManager from './manager/AdminManager';\n\nimport { Context } from './Store'\nimport apiClient from './services/api'\nimport RequestMenu from './menu/RequestMenu';\n\nfunction Admin() {\n  const [state, dispatch] = React.useContext(Context)\n  const history = useHistory()\n\n  const config = {\n    headers: {\n        'Content-Type' : 'application/json',\n        'Authorization': 'Bearer ' + state.token\n    }\n  }\n\n  const doLogout = function() {\n\n    apiClient.post('/api/logout', {}, config)\n    .then(response=> {\n      document.location.href = '/admin'\n    })\n    .catch(error => {\n      console.log(error.response)\n    })\n  }\n    return (\n        <Flex color=\"white\" height=\"100%\">\n        <Box className=\"aside\" bg=\"messenger.600\" width=\"64\" padding=\"1rem\">\n          <Stack>\n            <Box borderBottom=\"1px solid #ffffff5f\" paddingBottom=\"1rem\" padding=\"1rem\">\n              <Text fontSize=\"4xl\" fontWeight=\"bold\" letterSpacing=\".25rem\">NAVI</Text>\n              <Text fontWeight=\"light\" fontSize=\"s\" letterSpacing=\".35em\">AUTOMOBILE</Text>\n            </Box>\n            <Box flex=\"1\">\n              <Stack height=\"30rem\" overflow=\"auto\">\n\n                <Accordion borderColor=\"transparent\">\n\n                { state.user.type >= 10 &&\n                  <AccordionItem>\n                    <AccordionButton>\n                      <Box flex=\"1\" textAlign=\"left\">\n                        Main Menu\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                    <AccordionPanel pb={4} >\n                      <MainMenu />\n                    </AccordionPanel>\n                  </AccordionItem> }\n\n                  \n                  { state.user.type === 1 &&  \n                  <AccordionItem>\n                    <AccordionButton>\n                      <Box flex=\"1\" textAlign=\"left\">\n                        Manage Account\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                    <AccordionPanel pb={4} >\n                      <AccountMenu />\n                    </AccordionPanel>\n                  </AccordionItem>}\n\n                  { state.user.type === 2 &&  \n                    <AccordionItem>\n                    <AccordionButton>\n                      <Box flex=\"1\" textAlign=\"left\">\n                        Employee\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                    <AccordionPanel pb={4} >\n                      <EmployeeMenu />\n                    </AccordionPanel>\n                  </AccordionItem>}\n\n                  { state.user.type === 1 &&  \n                    <AccordionItem>\n                    <AccordionButton>\n                        <Box flex=\"1\" textAlign=\"left\">\n                          Customers\n                        </Box>\n                        <AccordionIcon />\n                      </AccordionButton>\n                      <AccordionPanel pb={4}>\n                        <CustomerMenu />\n                      </AccordionPanel>\n                  </AccordionItem> }\n\n                  { state.user.type === 1 &&  \n                  <AccordionItem>\n                    <AccordionButton>\n                        <Box flex=\"1\" textAlign=\"left\">\n                          Cars\n                        </Box>\n                        <AccordionIcon />\n                      </AccordionButton>\n                      <AccordionPanel pb={4}>\n                        <CarMenu />\n                      </AccordionPanel>\n                  </AccordionItem> }\n\n                  { state.user.type === 1 &&  \n                  <AccordionItem>\n                    <AccordionButton>\n                        <Box flex=\"1\" textAlign=\"left\">\n                          Transaction\n                        </Box>\n                        <AccordionIcon />\n                      </AccordionButton>\n                      <AccordionPanel pb={4}>\n                        <RequestMenu />\n                      </AccordionPanel>\n                  </AccordionItem> }\n                  \n                  { state.user.type === 3 &&  \n                    <AccordionItem>\n                    <AccordionButton>\n                        <Box flex=\"1\" textAlign=\"left\">\n                          Sparepart\n                        </Box>\n                        <AccordionIcon />\n                      </AccordionButton>\n                      <AccordionPanel pb={4}>\n                        <PartMenu />\n                      </AccordionPanel>\n                  </AccordionItem> }\n                \n                { state.user.type === 2 &&  \n                  <AccordionItem>\n                    <AccordionButton>\n                        <Box flex=\"1\" textAlign=\"left\">\n                          Transactions\n                        </Box>\n                        <AccordionIcon />\n                      </AccordionButton>\n                      <AccordionPanel pb={4}>\n                        <TransactionMenu />\n                      </AccordionPanel>\n                  </AccordionItem> }\n\n                </Accordion>\n\n              </Stack>\n            </Box>\n          </Stack>\n        </Box>\n        <Box className=\"main\" flex=\"1\">\n          <Flex direction=\"column\" height=\"100%\">\n            <Box bg=\"white\" height=\"14\" bg=\"white\" boxShadow=\"0 0 3px 1px #0000001f\" zIndex=\"1\">\n              <Flex height=\"100%\" alignItems=\"center\" padding=\"0 1rem\">\n                <Box>\n                  <Text color=\"gray.900\" fontWeight=\"semibold\">Welcome To Navi Automobile</Text>\n                </Box>\n\n                <Spacer />\n\n                <Box>\n                  <Menu colorScheme=\"orange\">\n                    <MenuButton\n                    as={Button}\n                    rightIcon={ <i className=\"la la-angle-down\"></i>}\n                    bgColor=\"gray.50\"\n                    textColor=\"gray.700\"\n                    fontWeight=\"normal\"\n                    height=\"2.3rem\"\n                    >\n                      { state.user.name }\n                    </MenuButton>\n\n                    <MenuList textColor=\"gray.700\">\n\n\n                      { state.user.type <= 3 &&\n                      <>\n                        <MenuItem\n                        onClick={\n                          function(){\n                            history.push('/preferences')\n                          }\n                        }\n                        icon={<i className=\"la la-sliders-h\"></i>}>Preferences</MenuItem>\n                        <MenuItem icon={<i className=\"la la-sign-out-alt\"></i>}\n                        onClick={doLogout}\n                        >Logout</MenuItem> </>}\n\n                      { state.user.type === 4 &&\n                        <MenuItem onClick={function(){\n                          document.location.reload()\n                        }} icon={<i className=\"la la-sign-in-alt\"></i>}>Login</MenuItem>\n                      }\n                    </MenuList>\n\n                  </Menu>\n                </Box>\n              </Flex>\n            </Box>\n            <Box flex=\"1\" bg=\"#fcfcfc\" padding=\"1rem .5rem\" overflowY=\"auto\">\n\n            <Route path='/admin/preferences'>\n              <Preferences />\n            </Route>\n\n            <Route path='/admin/register'>\n              <Register />\n            </Route>\n\n            <Route path='/admin/admins'>\n              <AdminManager />\n            </Route>\n\n            <Route path='/admin/brands'>\n              <BrandManager />\n            </Route>\n\n            <Route path='/admin/cartypes'>\n              <CarTypeManager />\n            </Route>\n\n            <Route path='/admin/cars'>\n              <CarManager />\n            </Route>\n\n            <Route path='/admin/carmodels'>\n              <CarModelManager />\n            </Route>\n\n            <Route path='/admin/caroptions'>\n              <CarOptionManager />\n            </Route>\n\n            <Route path='/admin/dealers'>\n              <DealerManager />\n            </Route>\n\n            <Route path='/admin/employeetypes'>\n              <EmployeeTypeManager />\n            </Route>\n\n            <Route path='/admin/employees'>\n              <EmployeeManager />\n            </Route>\n\n            <Route path='/admin/customers'>\n              <CustomerManager />\n            </Route>\n\n            <Route path='/admin/suppliers'>\n              <SupplierManager />\n            </Route>\n\n            <Route path='/admin/manufacturers'>\n              <ManufacturerManager />\n            </Route>\n\n            <Route path='/admin/parts'>\n              <PartManager />\n            </Route>\n\n            <Route path='/admin/transactiontypes'>\n              <TransactionTypeManager />\n            </Route>\n\n            <Route path='/admin/transactionstatuses'>\n              <TransactionStatusManager />\n            </Route>\n\n            <Route path='/admin/transactions'>\n              <TransactionManager />\n            </Route>\n\n            <Route path='/admin/reports'>\n              <Report />\n            </Route>\n\n            <Route path='/admin/requests'>\n              <TransactionRequestManager />\n            </Route>\n\n            <Route path='/admin/inventories'>\n              <InventoryManager />\n            </Route>\n\n            </Box>\n          </Flex>\n        </Box>\n      </Flex>\n    )\n}\n\nexport default Admin\n","import React from 'react'\nimport {\n    Flex,\n    Box,\n    Spacer,\n    Stack,\n    Button,\n    Text,\n    FormControl,\n    FormLabel,\n    Input,\n    FormErrorMessage,\n    VStack,\n    Link,\n    HStack\n} from '@chakra-ui/react';\n\nimport apiClient from './services/api';\nimport { Context } from './Store'\nimport { useHistory } from 'react-router-dom'\n\nfunction Login() {\n    const history = useHistory()\n\n    const [errors, setErrors] = React.useState({})\n    const [state, dispatch] = React.useContext(Context)\n\n    const getCookieValue = (name) => (\n        document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)')?.pop() || ''\n    )\n\n    // try use old session ... \n    // because buggy of the display i want to get rid of this...\n    if(false){\n        const token = getCookieValue('X-Sanctum-Token')\n\n        apiClient.get('/api/persistent', {\n            headers: {\n                'Content-Type' : 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n        .then(response => {\n            dispatch({type: 'SET_TOKEN', payload: token})\n            dispatch({type: 'SET_USER', payload: response.data.user})\n        })\n        .catch(error => {\n            console.log('Old session is unavailable or invalid')\n        })\n    }\n\n    const doLogin = function(e){\n        e.preventDefault()\n        const formdata = new FormData(e.target)\n        const entries = Object.fromEntries(formdata.entries())\n        console.log(entries)\n\n        apiClient.get('/sanctum/csrf-cookie')\n            .then(response => {\n                apiClient.post('/api/login', entries).then(response => {\n                    console.log(response.data)\n                    const token = response.data.token\n                    // set the token and we are all free hopefully\n                    dispatch({type: 'SET_TOKEN', payload: token})\n                    // set the user type\n                    dispatch({type: 'SET_USER', payload: response.data.user})\n                }).catch(function(error){\n                    console.log(error)\n                    if(error.response.status == 503){\n                        setErrors({'form': 'Invalid credentials'})\n                    }\n                    if(error.response.status == 422){\n                        setErrors(error.response.data.errors)\n                    }\n                }).catch(error => {})\n        });\n    }\n\n    return (\n        <Stack height=\"100%\" width=\"100%\" bg=\"blue.600\" alignItems=\"center\" justifyContent=\"center\"\n            style={\n                {\n                    'background': 'url(/img/background.jpg)'\n                }\n            }\n        >\n            <Box width=\"24rem\" bg=\"white\" padding=\"1rem\" \n            style={{\n                'boxShadow': '0 0 5px 1px #0000001f'\n            }}\n            backgroundColor=\"white\">\n                <Flex direction=\"column\" padding=\"1rem\" alignItems=\"center\">\n                    <Text fontSize=\"x-large\" fontWeight=\"bold\">Navi Automobile</Text>\n                    <Text color=\"gray.500\">Please login first</Text>\n                </Flex>\n\n                <form method=\"POST\" onSubmit={doLogin}>\n                    <VStack spacing=\"1rem\" padding=\"1rem\" alignItems=\"center\">\n                        <FormControl isInvalid={errors['form']} >\n                            <FormErrorMessage >Your credentials is invalid</FormErrorMessage>\n                        </FormControl>\n                        \n                        <FormControl id=\"name\" size=\"sm\" isInvalid={errors['email']}>\n                            <FormLabel size=\"sm\" color=\"gray.700\">Email</FormLabel>\n                            <Input borderColor=\"blue.400\" name=\"email\" placeholder=\"Input your email\" size=\"md\" bg=\"white\"/>\n                            <FormErrorMessage>{errors['email']}</FormErrorMessage>\n                        </FormControl>\n\n                        <FormControl id=\"name\" size=\"sm\" isInvalid={errors['password']}>\n                            <FormLabel size=\"sm\" color=\"gray.700\">Password</FormLabel>\n                            <Input name=\"password\" borderColor=\"blue.400\" placeholder=\"Input your password\" size=\"md\" type=\"password\" bg=\"white\"/>\n                            <FormErrorMessage>{errors['password']}</FormErrorMessage>\n                        </FormControl>\n                        <Spacer height=\"2rem\"/>\n                        <VStack>\n                            <Button type=\"submit\" colorScheme=\"blue\" width=\"12rem\">Login</Button>\n                        </VStack>\n                        \n                    </VStack>\n                </form>\n            </Box>\n        </Stack>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useBreakpointValue,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n} from '@chakra-ui/icons';\n\nimport { useHistory } from 'react-router-dom'\nimport { Context } from '../Store'\n\nexport default function Main() {\n  const history = useHistory()\n\n  const { isOpen, onToggle } = useDisclosure();\n  const [state, dispatch] = React.useContext(Context)\n\n  return (\n    <Box>\n      <Flex\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        borderColor=\"gray.100\"\n        align={'center'}\n        shadow=\"sm\"\n        >\n        <Flex\n          flex={{ base: 1, md: 'auto' }}\n          ml={{ base: -2 }}\n          display={{ base: 'flex', md: 'none' }}>\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={'ghost'}\n            aria-label={'Toggle Navigation'}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n          <Text\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n            fontFamily={'heading'}\n            fontSize=\"lg\"\n            fontWeigh=\"bold\"\n            color=\"blue.400\"\n            >\n            NAVI\n          </Text>\n\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n            <DesktopNav history={history} />\n          </Flex>\n        </Flex>\n        \n        <Stack\n          flex=\"1\"\n          justify={'flex-end'}\n          direction={'row'}\n          spacing={6}>\n          { state.token == '' &&\n          <>\n          <Button\n            fontSize={'sm'}\n            fontWeight={400}\n            variant={'link'}\n            onClick={() => {\n              history.push('/store/login')\n            }}\n            >\n            Sign In\n          </Button>\n          <Button\n            display={{ base: 'none', md: 'inline-flex' }}\n            fontSize={'sm'}\n            fontWeight={600}\n            color={'white'}\n            bg={'blue.400'}\n            _hover={{\n              bg: 'blue.300',\n            }}\n            onClick={() => {\n              history.push('/store/register')\n            }}\n            >\n            Sign Up\n          </Button> \n          </>}\n\n          { state.token != '' &&\n          <>\n          <Text fontWeight=\"bold\" lineHeight=\"3rem\">{ state.user.name }</Text>\n          <Button\n            fontSize={'sm'}\n            fontWeight={400}\n            onClick={(event) => {\n              event.preventDefault()\n              history.push('/store/transactions')\n            }}    \n            colorScheme=\"blue\"\n            >\n            Transaction\n          </Button>\n            <Button\n            fontSize={'sm'}\n            fontWeight={400}\n            onClick={() => {\n              document.location.href = '/store/login'\n            }}\n            >\n            LogOut\n          </Button>\n          </>}\n        </Stack> \n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav history={history}/>\n      </Collapse>\n    </Box>\n  );\n}\n\nconst DesktopNav = ({ history }) => {\n  return (\n    <Stack direction={'row'} spacing={4}>\n      {NAV_ITEMS.map((navItem) => (\n        <Box key={navItem.label}>\n          <Popover trigger={'hover'} placement={'bottom-start'}>\n            <PopoverTrigger>\n              <Link\n                p={2}\n                href={navItem.href ?? '#'}\n                fontSize={'sm'}\n                fontWeight={500}\n                _hover={{\n                  textDecoration: 'none',\n                }}\n                onClick={(event) => {\n                  event.preventDefault()\n                  history.push(navItem.href)\n                }}\n                >\n                {navItem.label}\n              </Link>\n            </PopoverTrigger>\n\n            {navItem.children && (\n              <PopoverContent\n                border={0}\n                boxShadow={'xl'}\n                p={4}\n                rounded={'xl'}\n                minW={'sm'}>\n                <Stack>\n                  {navItem.children.map((child) => (\n                    <DesktopSubNav key={child.label} {...child} history={history} />\n                  ))}\n                </Stack>\n              </PopoverContent>\n            )}\n          </Popover>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel, history }: NavItem) => {\n  return (\n    <Link\n      href={href}\n      onClick={(event) => {\n        event.preventDefault()\n        history.push(href)\n      }}\n      role={'group'}\n      display={'block'}\n      p={2}\n      rounded={'md'}\n      _hover={{ }}>\n      <Stack direction={'row'} align={'center'}>\n        <Box>\n          <Text\n            transition={'all .3s ease'}\n            _groupHover={{ color: 'pink.400' }}\n            fontWeight={500}>\n            {label}\n          </Text>\n          <Text fontSize={'sm'}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={'all .3s ease'}\n          transform={'translateX(-10px)'}\n          opacity={0}\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n          justify={'flex-end'}\n          align={'center'}\n          flex={1}>\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = ({ history }) => {\n  return (\n    <Stack\n      p={4}\n      display={{ md: 'none' }}>\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem key={navItem.label} {...navItem} history={history} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href, history }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        onClick={(event) => {\n          event.preventDefault()\n          history.push(href)\n        }}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}>\n        <Text\n          fontWeight={600}\n          >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          align={'start'}>\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href} onClick={(event) => {\n                event.preventDefault()\n                history.push(href)\n              }}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: 'Home',\n    href: '/store',\n  },\n  {\n    label: 'Explore',\n    children: [\n      {\n        label: 'Explore Cars',\n        subLabel: 'Find your dreams cars now',\n        href: '/store/cars',\n      },\n      {\n        label: 'Dealer\\'s Location',\n        subLabel: 'Location of our offline dealer store',\n        href: '/store/dealers',\n      },\n    ],\n  },\n];\n"," import {\n  Button,\n  Flex,\n  Heading,\n  Image,\n  Stack,\n  Text,\n  useBreakpointValue,\n} from '@chakra-ui/react';\n\nimport { useHistory } from 'react-router-dom'\n\nexport default function SplitScreen() {\n\n  const history = useHistory();\n\n  return (\n    <Stack minH={'100vh'} direction={{ base: 'column', md: 'row' }}>\n      <Flex p={8} flex={1} align={'center'} justify={'center'}>\n        <Stack spacing={6} w={'full'} maxW={'lg'}>\n          <Heading fontSize={{ base: '3xl', md: '4xl', lg: '5xl' }}>\n            <Text\n              as={'span'}\n              position={'relative'}\n              _after={{\n                content: \"''\",\n                width: 'full',\n                height: useBreakpointValue({ base: '20%', md: '30%' }),\n                position: 'absolute',\n                bottom: 1,\n                left: 0,\n                bg: 'blue.400',\n                zIndex: -1,\n              }}>\n              Dream Cars?\n            </Text>\n            <br />{' '}\n            <Text color={'blue.400'} as={'span'}>\n              Discover It Now\n            </Text>{' '}\n          </Heading>\n          <Text fontSize={{ base: 'md', lg: 'lg' }} color={'gray.500'}>\n            The best place to explore and find the car's that you've been looking for.\n            Do not hesitate anymore, explore it now...\n          </Text>\n          <Stack direction={{ base: 'column', md: 'row' }} spacing={4}>\n            <Button\n              as={'a'}\n              href='/store/cars'\n              rounded={'full'}\n              bg={'blue.400'}\n              color={'white'}\n              _hover={{\n                bg: 'blue.500',\n              }}\n              onClick={(event) => {\n                event.preventDefault()\n                history.push('/store/cars')\n              }}\n              >\n              Explore Cars\n            </Button>\n            <Button rounded={'full'}\n              as={'a'}\n              href='/store/dealers'\n              onClick={(event) => {\n                event.preventDefault()\n                history.push('/store/dealers')\n              }}\n            >Dealers Location</Button>\n          </Stack>\n        </Stack>\n      </Flex>\n      <Flex flex={1}>\n        <Image\n          alt={'Login Image'}\n          objectFit={'cover'}\n          src={\n            'https://images.unsplash.com/photo-1493238792000-8113da705763?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'\n          }\n        />\n      </Flex>\n    </Stack>\n  );\n}\n","import React from 'react'\nimport {\n    Flex,\n    Box,\n    FormControl,\n    FormLabel,\n    Input,\n    Checkbox,\n    Stack,\n    Link,\n    Button,\n    Heading,\n    Text,\n    useColorModeValue,\n    FormErrorMessage,\n} from '@chakra-ui/react';\n\nimport apiClient from '../services/api'\nimport { Context } from '../Store'\nimport { useHistory } from 'react-router-dom'\n  \nexport default function Login() {\n\n    const history = useHistory()\n    const [error, setError] = React.useState([])\n    const [state, dispatch] = React.useContext(Context)\n\n    const doLogin = (event) => {\n      event.preventDefault()\n      const formdata = new FormData(event.target)\n      const entries = Object.fromEntries(formdata)\n\n      apiClient.post('/api/login', entries)\n      .then(response => {\n        console.log(response.data)\n        // set token and user of course because i am really bored really just doing this project make\n        // me really hate of coding but what do you think?\n        // i hope everything gonna be alright\n        // this code is certainly the worst of some, but if it's work then what do you blame for\n        // oh my lord of the seven skies...\n\n        dispatch({type: 'SET_USER', payload: response.data.user});\n        dispatch({type: 'SET_TOKEN', payload: response.data.token})\n\n        history.push('/store/cars')\n      })\n      .catch(error => {\n        setError(error.response.data.errors)\n      })\n      .catch(error => {\n        alert('Login invalid')\n        document.location.href = '/store/login'\n      })\n    }\n\n    return (\n      <Flex\n        minH={'100vh'}\n        align={'center'}\n        justify={'center'}\n        bg={useColorModeValue('gray.50', 'gray.800')}>\n        <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n          <Stack align={'center'}>\n            <Heading fontSize={'4xl'}>Sign in to your account</Heading>\n            <Text fontSize={'lg'} color={'gray.600'}>\n              sign in first to use your account preferences\n            </Text>\n          </Stack>\n          <Box\n            rounded={'lg'}\n            bg={useColorModeValue('white', 'gray.700')}\n            boxShadow={'lg'}\n            p={8}>\n            <Stack spacing={4}>\n              <form method=\"POST\" onSubmit={(event) => {\n                doLogin(event)\n              }}>\n              <FormControl id=\"email\" isInvalid={error['email']}>\n                <FormLabel>Email address</FormLabel>\n                <Input name=\"email\" type=\"email\" />\n                <FormErrorMessage>{error['email']}</FormErrorMessage>\n              </FormControl>\n\n              <FormControl id=\"password\" isInvalid={error['password']}>\n                <FormLabel>Password</FormLabel>\n                <Input name=\"password\" type=\"password\" />\n                <FormErrorMessage>{error['email']}</FormErrorMessage>\n              </FormControl>\n\n              <Stack spacing={10}>\n                <Button type=\"submit\"\n                  bg={'blue.400'}\n                  color={'white'}\n                  _hover={{\n                    bg: 'blue.500',\n                  }}>\n                  Sign in\n                </Button>\n              </Stack>\n              </form>\n            </Stack>\n          </Box>\n        </Stack>\n      </Flex>\n    );\n  }\n  ","import React from 'react'\nimport {\n    Flex,\n    Box,\n    FormControl,\n    FormLabel,\n    Input,\n    Checkbox,\n    Stack,\n    Link,\n    Button,\n    Heading,\n    Text,\n    useColorModeValue,\n    FormErrorMessage,\n} from '@chakra-ui/react';\n\nimport apiClient from '../services/api'\nimport { Context } from '../Store'\n\nexport default function Register() {\n\n    const [error, setError] = React.useState([])\n    const [state, dispatch] = React.useContext(Context)\n\n    // saat register ingat juga untuk input ke customer jangan hanya ke user, this is sadge...\n    const doRegister = (event) => {\n      event.preventDefault()\n      const formdata = new FormData(event.target)\n      const entries = Object.fromEntries(formdata)\n\n      apiClient.post('/api/register', entries)\n      .then(response => {\n        console.log(response.data)\n        // create new Customer data\n        apiClient.post('/api/customers', {\n          name: response.data.user.name,\n          account: response.data.user.id\n        })\n        .then(response => {\n          alert('Added to Customer table')\n        })\n        .catch(error => {\n          alert('Error adding customer sadge')\n        })\n        alert('Registered, Please login afterward.')\n      })\n      .catch(error => {\n        setError(error.response.data.errors)\n      })\n    }\n\n    return (\n      <Flex\n        minH={'100vh'}\n        align={'center'}\n        justify={'center'}\n        bg={useColorModeValue('gray.50', 'gray.800')}>\n        <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n          <Stack align={'center'}>\n            <Heading fontSize={'4xl'}>Sign up for an account</Heading>\n            <Text fontSize={'lg'} color={'gray.600'}>\n              for purchase/transaction convenience\n            </Text>\n          </Stack>\n          <Box\n            rounded={'lg'}\n            bg={useColorModeValue('white', 'gray.700')}\n            boxShadow={'lg'}\n            p={8}>\n\n            <form method=\"POST\" onSubmit={(event) => {\n              doRegister(event)\n            }}>\n            <Stack spacing={4}>\n\n            <FormControl id=\"name\" isInvalid={error['name']}>\n                <FormLabel>Your Name</FormLabel>\n                <Input name=\"name\" type=\"name\" />\n                <FormErrorMessage>{error['name']}</FormErrorMessage>\n              </FormControl>\n\n              <FormControl id=\"email\" isInvalid={error['email']}>\n                <FormLabel>Email address</FormLabel>\n                <Input name=\"email\" type=\"email\" />\n                <FormErrorMessage>{error['email']}</FormErrorMessage>\n              </FormControl>\n\n              <FormControl id=\"password\" isInvalid={error['password']}>\n                <FormLabel>Password</FormLabel>\n                <Input name=\"password\" type=\"password\" />\n                <FormErrorMessage>{error['password']}</FormErrorMessage>\n              </FormControl>\n\n              <FormControl id=\"password_confirmation\" isInvalid={error['password_confirmation']}>\n                <FormLabel>Confirm Password</FormLabel>\n                <Input name=\"password_confirmation\" type=\"password\" />\n                <FormErrorMessage>{error['password_confirmation']}</FormErrorMessage>\n              </FormControl>\n              <Stack spacing={10}>\n                <Button\n                  bg={'blue.400'}\n                  color={'white'}\n                  _hover={{\n                    bg: 'blue.500',\n                  }}\n                  type=\"submit\"\n                  >\n                  Sign Up\n                </Button>\n              </Stack>\n            </Stack>\n            </form>\n          </Box>\n        </Stack>\n      </Flex>\n    );\n  }\n","import React from 'react'\nimport {\n  Flex,\n  Circle,\n  Box,\n  Image,\n  Badge,\n  useColorModeValue,\n  Icon,\n  chakra,\n  Tooltip,\n  Text,\n  Button,\n} from '@chakra-ui/react';\n\nimport { Context } from '../../Store'\nimport { useHistory } from 'react-router-dom'\n\ninterface RatingProps {\n  rating: number;\n  numReviews: number;\n}\n\nfunction Rating({ rating, numReviews }: RatingProps) {\n  return (\n    <Box d=\"flex\" alignItems=\"center\">\n      <Text fontSize=\"xs\">STOCK</Text>\n    </Box>\n  );\n}\n\nfunction Product({ callback, identifier, data }) {\n  const history = useHistory();\n\n  const [state, dispatch] = React.useContext(Context)\n  \n  const doBuy = () => {\n    if(state.token === ''){\n      alert('You\\'re not logged in. Please login first')\n      history.push('/store/login')\n    } else {\n      callback(data )\n      console.log(data)\n    }\n  }\n\n  return (\n    <Box\n      bg={useColorModeValue('white', 'gray.800')}\n      maxW=\"sm\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      shadow=\"md\"\n      position=\"relative\"\n      margin=\"1rem 0 0 1rem\"\n      width=\"14rem\"\n      >\n\n      <Image\n        src={'https://images.unsplash.com/photo-1503736334956-4c8f8e92946d?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fGNhcnxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60'}\n        htmlWidth=\"100%\"\n        htmlHeight=\"auto\"\n        fit=\"cover\"\n        height=\"8rem\"\n      />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n        </Box>\n        <Flex mt=\"1\" justifyContent=\"space-between\" alignContent=\"center\" alignItems=\"center\">\n          <Box\n            fontSize=\"md\"\n            fontWeight=\"semibold\"\n            as=\"h4\"\n            lineHeight=\"tight\"\n            isTruncated>\n            {data.brand} {data.model}\n          </Box>\n        </Flex>\n\n        <Flex justifyContent=\"space-between\" alignContent=\"center\" alignItems=\"center\">\n          <Flex direction=\"column\">\n            <Box fontSize=\"1xl\" color={useColorModeValue('gray.800', 'white')}>\n              <Box as=\"span\" color={'gray.600'} fontSize=\"lg\">\n                $\n              </Box>\n              {data.price}\n            </Box>\n            <Box>\n              Stock: {data.stock}\n            </Box>\n          </Flex>\n\n          <Flex justifyContent=\"flex-end\">\n            <Tooltip\n                label=\"Buy this car\"\n                bg=\"white\"\n                placement={'top'}\n                color={'gray.800'}\n                fontSize={'1em'}>\n                <Button\n                  onClick={() => {\n                    doBuy(data)\n                  }}\n                >Buy</Button>\n              </Tooltip>\n          </Flex>\n        </Flex>\n\n        \n      </Box>\n    </Box>\n  );\n}\n\nexport default Product;\n","import {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Box,\n    Button,\n    useDisclosure,\n    FormControl,\n    FormLabel,\n    Input,\n    Text,\n    VStack,\n  } from \"@chakra-ui/react\"\nimport React from 'react'\nimport Product from './components/Product'\n\nimport apiClient from '../services/api'\nimport { Context } from '../Store'\n\nexport default function Cars() {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const [state, dispatch] = React.useContext(Context)\n    const [dataset, setData] = React.useState([]);\n\n    const [current, setCurrent] = React.useState([]);\n\n    const config = {\n        headers: {\n            'Content-Type' : 'application/json',\n            'Authorization': 'Bearer ' + state.token\n        }\n    }\n\n    const callback = (data) => {\n        onOpen()\n\n        apiClient.get('/api/getone' + '/' + data.dealer_id + '/' + data.model_id)\n        .then(response => {\n            let data = response.data\n            if(data.length > 0){\n                data = data[0]\n            }\n            setCurrent([data])\n            console.log(data)\n        })\n    }\n\n    React.useEffect(function(){\n        fetchData()\n    }, [])\n\n    const fetchData = function() {\n        apiClient.get('/api/products')\n        .then(response => {\n            setData(response.data)\n        }).catch(error => {})\n    }\n\n    const doPurchase = function() {\n        apiClient.post('/api/purchase', {\n            customer: state.user.id,\n            inventory: current[0].inv_id\n        }, config)\n        .then(response => {\n            console.log(response.data)\n        })\n        .catch(error => {\n            alert('Transaction failed')\n        })\n    }\n\n    return (\n        <Box>\n            <Box display=\"inline-flex\">\n                {\n                    dataset.map(function(item){\n                        return (\n                            <Product identifier=\"VIN001\" callback={callback} \n                            data={item}\n                            />\n                        )\n                    })\n                }\n                \n            </Box>\n\n                <Modal\n                    isOpen={isOpen}\n                    onClose={onClose}\n                >\n                <ModalOverlay />\n                <ModalContent>\n                <ModalHeader>Purchase Confirmation</ModalHeader>\n                <ModalCloseButton />\n\n                <ModalBody pb={6}>\n                    <VStack spacing=\"1rem\" alignItems=\"flex-start\" padding=\"1rem\">\n\n                        {\n                        current.map(function(item){\n                            return(\n                                <>\n                                <Box>\n                                    <Text fontWeight=\"bold\">VIN</Text>    \n                                    <Text color=\"gray.700\">{item.car}</Text>\n                                </Box>\n\n                                <Box>\n                                    <Text fontWeight=\"bold\">Dealer</Text>    \n                                    <Text color=\"gray.700\">{item.name}</Text>\n                                </Box>\n\n                                <Box>\n                                    <Text fontWeight=\"bold\">Price</Text>    \n                                    <Text color=\"gray.700\">{item.price}</Text>\n                                </Box>\n                                </>\n                            )\n                        }) \n                        }\n                    </VStack>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"blue\" mr={3} onClick={doPurchase}>\n                    Confirm Purchase\n                    </Button>\n                    <Button onClick={onClose}>Cancel</Button>\n                </ModalFooter>\n                </ModalContent>\n            </Modal>\n\n        </Box>\n\n    )\n}\n","import React from 'react'\nimport {\n  Flex,\n  Stack,\n  Heading,\n  Text,\n  Input,\n  Button,\n  Icon,\n  useColorModeValue,\n  createIcon,\n  Box,\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from '@chakra-ui/react';\n\nimport apiClient from '../services/api'\nimport { Context } from '../Store'\n  \nexport default function Checkouted() {\n\n  const [state, dispatch] = React.useContext(Context)\n  const [sales, setSales] = React.useState([]);\n\n  React.useEffect(function(){\n    if(state.token === ''){\n      alert('Please login first')\n      document.location.href = '/store/login'\n    }\n    fetchAll('unpaid/' + state.user.id , setSales)\n  }, [])\n\n  const config = {\n    headers: {\n        'Content-Type' : 'application/json',\n        'Authorization': 'Bearer ' + state.token\n    }\n  }\n\n  const fetchAll = (name, setter) => {\n    apiClient.get('/api/' + name, config)\n    .then(response => {\n        setter(response.data)\n        console.log(response.data)\n    })\n  }\n\n  const doPay = (sale) => {\n    apiClient.post('/api/pay/' + sale.inventory_id + '/' + sale.sales_id, {}, config)\n    .then(response => {\n      alert('Payment succesful')\n    })\n    .catch(error => {\n      alert('Failed to pay')\n    })\n  }\n\n  return (\n    <Flex padding=\"1rem\" direction=\"column\" alignItems=\"center\">\n      <Text fontWeight=\"bold\" fontSize=\"xl\" margin=\"2rem 0\">List of user transaction</Text>\n\n      <Table variant=\"simple\" width=\"28rem\">\n        <TableCaption>Just click pay to pay (simulation only)</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Item</Th>\n            <Th>Provider</Th>\n            <Th>Date</Th>\n            <Th>Action</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n            {\n              sales.map(function(sale){\n                return(\n                  <Tr>\n                    <Td>{ sale.vin }</Td>\n                    <Td>{ sale.dealer }</Td>\n                    <Td>{ sale.created_at }</Td>\n                    <Td>\n                      {\n                        sale.paid == 0 && <Button\n                        onClick={() => {\n                          doPay(sale)\n                        }}\n                        >Pay</Button>\n                      }\n\n                      {\n                        sale.paid == 1 && <Text>Paid</Text>\n                      }\n                      \n                      </Td>\n                  </Tr>\n                )\n              })\n            }\n      \n        </Tbody>\n      </Table>\n\n    </Flex>\n  )\n}","import {\n    Flex,\n    Stack,\n    Heading,\n    Text,\n    Input,\n    Button,\n    Icon,\n    useColorModeValue,\n    createIcon,\n    Box,\n  } from '@chakra-ui/react';\n  \n  export default function Payed() {\n    return (\n      <Flex\n        minH={'100vh'}\n        align={'center'}\n        justify={'center'}\n        py={12}\n        bg={useColorModeValue('gray.50', 'gray.800')}>\n        <Stack\n          boxShadow={'2xl'}\n          bg={useColorModeValue('white', 'gray.700')}\n          rounded={'xl'}\n          p={10}\n          spacing={8}\n          align={'center'}>\n          <Icon as={NotificationIcon} w={24} h={24} />\n          <Stack align={'center'} spacing={2}>\n            <Heading\n              textTransform={'uppercase'}\n              fontSize={'3xl'}\n              color={useColorModeValue('gray.800', 'gray.200')}>\n              Congratulations\n            </Heading>\n            <Text fontSize={'lg'} color={'gray.500'}>\n              Your payment is received, wait the car at your door...\n            </Text>\n          </Stack>\n\n        </Stack>\n      </Flex>\n    );\n  }\n  \n  const NotificationIcon = createIcon({\n    displayName: 'Notification',\n    viewBox: '0 0 128 128',\n    path: (\n      <g id=\"Notification\">\n        <rect\n          className=\"cls-1\"\n          x=\"1\"\n          y=\"45\"\n          fill={'#fbcc88'}\n          width=\"108\"\n          height=\"82\"\n        />\n        <circle className=\"cls-2\" fill={'#8cdd79'} cx=\"105\" cy=\"86\" r=\"22\" />\n        <rect\n          className=\"cls-3\"\n          fill={'#f6b756'}\n          x=\"1\"\n          y=\"122\"\n          width=\"108\"\n          height=\"5\"\n        />\n        <path\n          className=\"cls-4\"\n          fill={'#7ece67'}\n          d=\"M105,108A22,22,0,0,1,83.09,84a22,22,0,0,0,43.82,0A22,22,0,0,1,105,108Z\"\n        />\n        <path\n          fill={'#f6b756'}\n          className=\"cls-3\"\n          d=\"M109,107.63v4A22,22,0,0,1,83.09,88,22,22,0,0,0,109,107.63Z\"\n        />\n        <path\n          className=\"cls-5\"\n          fill={'#d6ac90'}\n          d=\"M93,30l16,15L65.91,84.9a16,16,0,0,1-21.82,0L1,45,17,30Z\"\n        />\n        <path\n          className=\"cls-6\"\n          fill={'#cba07a'}\n          d=\"M109,45,65.91,84.9a16,16,0,0,1-21.82,0L1,45l2.68-2.52c43.4,40.19,41.54,39.08,45.46,40.6A16,16,0,0,0,65.91,79.9l40.41-37.42Z\"\n        />\n        <path\n          className=\"cls-7\"\n          fill={'#dde1e8'}\n          d=\"M93,1V59.82L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82V1Z\"\n        />\n        <path\n          className=\"cls-8\"\n          fill={'#c7cdd8'}\n          d=\"M74,56c-3.56-5.94-3-10.65-3-17.55a16.43,16.43,0,0,0-12.34-16,5,5,0,1,0-7.32,0A16,16,0,0,0,39,38c0,7.13.59,12-3,18a3,3,0,0,0,0,6H50.41a5,5,0,1,0,9.18,0H74a3,3,0,0,0,0-6ZM53.2,21.37a3,3,0,1,1,3.6,0,1,1,0,0,0-.42.7,11.48,11.48,0,0,0-2.77,0A1,1,0,0,0,53.2,21.37Z\"\n        />\n        <path\n          className=\"cls-3\"\n          fill={'#f6b756'}\n          d=\"M46.09,86.73,3,127H1v-1c6-5.62-1.26,1.17,43.7-40.78A1,1,0,0,1,46.09,86.73Z\"\n        />\n        <path\n          className=\"cls-3\"\n          fill={'#f6b756'}\n          d=\"M109,126v1h-2L63.91,86.73a1,1,0,0,1,1.39-1.49C111,127.85,103.11,120.51,109,126Z\"\n        />\n        <path\n          className=\"cls-8\"\n          fill={'#c7cdd8'}\n          d=\"M93,54.81v5L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82v-5L44.09,79.9a16,16,0,0,0,21.82,0Z\"\n        />\n        <path\n          className=\"cls-9\"\n          fill={'#fff'}\n          d=\"M101,95c-.59,0-.08.34-8.72-8.3a1,1,0,0,1,1.44-1.44L101,92.56l15.28-15.28a1,1,0,0,1,1.44,1.44C100.21,96.23,101.6,95,101,95Z\"\n        />\n        <path\n          className=\"cls-3\"\n          fill={'#f6b756'}\n          d=\"M56.8,18.38a3,3,0,1,0-3.6,0A1,1,0,0,1,52,20,5,5,0,1,1,58,20,1,1,0,0,1,56.8,18.38Z\"\n        />\n        <path\n          className=\"cls-1\"\n          fill={'#fbcc88'}\n          d=\"M71,42.17V35.45c0-8.61-6.62-16-15.23-16.43A16,16,0,0,0,39,35c0,7.33.58,12-3,18H74A21.06,21.06,0,0,1,71,42.17Z\"\n        />\n        <path\n          className=\"cls-3\"\n          fill={'#f6b756'}\n          d=\"M74,53H36a21.36,21.36,0,0,0,1.86-4H72.14A21.36,21.36,0,0,0,74,53Z\"\n        />\n        <path className=\"cls-3\" fill={'#f6b756'} d=\"M59.59,59a5,5,0,1,1-9.18,0\" />\n        <path\n          className=\"cls-1\"\n          fill={'#fbcc88'}\n          d=\"M74,59H36a3,3,0,0,1,0-6H74a3,3,0,0,1,0,6Z\"\n        />\n      </g>\n    ),\n  });\n  ","import Nav from './user/Nav';\nimport Hero from './user/Hero';\nimport Login from './user/Login';\nimport Register from './user/Register';\nimport Cars from './user/Cars';\n\nimport { Route } from 'react-router-dom'\nimport Transaction from './user/Transaction';\nimport Payed from './user/Payed';\nimport React from 'react';\n\nexport default function Main(){\n\n    // test\n    React.useEffect(() => {\n        console.log('This in main')\n    }, [])\n    return (\n        <>\n            <Route path=\"/store\" exact>\n                <Nav />\n                <Hero />\n            </Route>\n\n            <Route path=\"/store/login\">\n                <Nav />\n                <Login />\n            </Route>\n\n            <Route path=\"/store/register\">\n                <Nav />\n                <Register />\n            </Route>\n\n            <Route path=\"/store/cars\">\n                <Nav />\n                <Cars />\n            </Route>\n\n            <Route path=\"/store/dealers\">\n                <Nav />\n                <Register />\n            </Route>\n\n            <Route path=\"/store/transactions\">\n                <Nav />\n                <Transaction />\n            </Route>\n\n            <Route path=\"/store/completed\">\n                <Nav />\n                <Payed />\n            </Route>\n\n        </>\n    )\n}\n","import React from 'react';\nimport {\n    ChakraProvider,\n} from '@chakra-ui/react';\n\nimport { Context } from './Store'\nimport { Route, Switch } from 'react-router-dom'\nimport Admin from './Admin';\nimport Login from './Login';\nimport Main from './Main';\n\nfunction App() {\n\n    const [state, dispatch] = React.useContext(Context)\n\n    return (\n        <ChakraProvider>\n            <Route path='/admin'>\n                { state.token == '' ? <Login /> : <Admin /> }\n            </Route>\n\n            <Route path='/store'>\n                <Main />\n            </Route>\n\n        </ChakraProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './Store'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <BrowserRouter>\n    <Store>\n      <App />\n    </Store>\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\nreportWebVitals();\n"],"sourceRoot":""}